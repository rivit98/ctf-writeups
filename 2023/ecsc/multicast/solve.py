
from math import gcd
from pwn import *
import re


def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise ValueError('Modular inverse does not exist.')
    else:
        return x % m

def attack(c1, c2, e1, e2, N):
    if gcd(e1, e2) != 1:
        raise ValueError("Exponents e1 and e2 must be coprime")
    s1 = modinv(e1,e2)
    s2 = (gcd(e1,e2) - e1 * s1) // e2
    temp = modinv(c2, N)
    m1 = pow(c1,s1,N)
    m2 = pow(temp,-s2,N)
    return (m1 * m2) % N

def main():
    ct1 = 8638899850921773212005829853690607732687373134541407139517280676856550616567432120866090405974052051180222166170366712696237514108663592355665834150784120748691937179988330174151668042283748171869766268787902240737031396132674399375504934228003423637227278765723465401581885049147383406207756443896957407853444856849836692273897221572621643143935797216459394888115523570572588106430391163826886382863257107332042686555536950267473620034812005032747616871849480439234230636888139185882063911539787951450933711832204382666917747070923766091315076950655333150384005190481028844335067896975307558495625052437887128031182
    ct2 = 7944512764135228535928475390070897032164151091017260910652962028605559227044483213843695473107050544251964969015209639947241923366367593635143020355115430433157453038105291806447500373182202580172787722309259901773437911671572370694439734600069607974329643035534973692147295417629600001808707134112120867648527467850066174494083532406292395073055602396601764859230814365275297366048508884801750768912680989173220632872592955295305073574963345333388690413344139921601588396742118287466329881052275120793808515262818454598339948560285866996354627925766642992207718197562207559961901419993930328131061273076141783533884

    e1 = 3791335447
    e2 = 2572511867
    N = 15283309577603488890133274107897750430930844441662363425468092206031400480287948452316263289981045745358293847045364808152434120078371778195296980052545240351067778903705170874986003108660955660114746872779032949110187522223624472790599853828654567297437606366492432019446893183534352480229224086632734193992222009505535404175815277741035597204410072449952314161289208873568000139928514189869860934750176357542041239874536162900747761185172632844490483062347848937021140996302924761883195198472667271848058091138689964771115608974093866818443591683308495902615298801798333924335400385736563372190819155179730196410201

    message = attack(ct1, ct2, e1, e2, N)
    dec = unhex(hex(message)[2:])
    dec = dec[dec.find(b'ecsc23{'):]
    dec = dec[:dec.find(b'}')]
    print(dec.decode())


import sys
sys.setrecursionlimit(10000)
main()
