0x000000000009d24d : adc al, 0 ; mov qword ptr [rax], rdi ; ret
0x00000000000a29e3 : adc al, 0 ; mov qword ptr [rip + 0x14c23c], rax ; ret
0x00000000000be2d3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000008b0a5 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000184780 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000036d59 : adc al, 0xb7 ; mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000058781 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000becc8 : adc al, 0xe ; cmp rdi, rdx ; jb 0xbecdb ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014b2cb : adc bl, al ; mov dword ptr [rsi], 8 ; ret
0x0000000000059496 : adc bl, ch ; jge 0x594ec ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000014b2ca : adc bl, r8b ; mov dword ptr [rsi], 8 ; ret
0x00000000000be24c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be26e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2ac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be32e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be454 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be352 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be2d0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x000000000014b222 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000be24d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be26f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2ad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be32f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be431 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be3b2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be392 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000001638f1 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000009671d : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000037129 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000abbfd : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abbdf : adc byte ptr [rdi], cl ; mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x000000000009115c : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; neg eax ; ret
0x000000000005af25 : adc dword ptr [rdi], eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000015611d : adc eax, 0x9a9fe ; mov qword ptr fs:[rax], rdx ; ret
0x00000000000b6ad8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000004bccf : adc ecx, dword ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x00000000000b6ca4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b6cc4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b6ce4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b6b2e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000bf389 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000b6b2b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001427e5 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014de14 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000ad565 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000be109 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be11b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000ab920 : add al, 0x39 ; sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x000000000008870c : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000001709ba : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000089242 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000013f7f5 : add al, 0x4c ; lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000017dac7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b6bbc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000182eab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000131e5b : add al, 0x85 ; sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x00000000000589c9 : add al, 0xc8 ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x00000000000abb71 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc2e : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x0000000000180fbd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000013ed5e : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000b4641 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000ad6cf : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000000baceb : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000193448 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000105c05 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000011fda8 : add al, byte ptr [rax] ; mov r8, rbx ; mov rax, r8 ; pop rbx ; ret
0x0000000000036cfc : add al, byte ptr [rbp + 0x440775c0] ; mov eax, eax ; ret
0x000000000013f5b7 : add al, byte ptr [rbp - 0x77] ; sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x0000000000122917 : add al, byte ptr [rbx + 0x377426f8] ; mov eax, r8d ; ret
0x000000000013ed88 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000fc8d4 : add al, ch ; mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000055c35 : add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x000000000014b2d2 : add bl, al ; mov dword ptr [rsi], 0xa ; ret
0x000000000014b2d9 : add bl, al ; mov dword ptr [rsi], 0xb ; ret
0x00000000000ef58d : add bl, al ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000abbca : add bl, al ; nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x000000000014c2bf : add bl, byte ptr [rbx + 0x5d] ; mov eax, r8d ; ret
0x000000000013ed86 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x00000000000bf307 : add byte ptr [rax + 0x485bf0e5], al ; cmovne eax, edx ; ret
0x0000000000045148 : add byte ptr [rax + 0x48c22148], al ; mov dword ptr [rdi], edx ; ret
0x00000000000370a8 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x00000000000b4a89 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000012e39f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480143 ; ret
0x000000000012d52f : add byte ptr [rax + 0xf], cl ; mov esi, 0x8348014b ; ret
0x00000000000e3ac7 : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480153 ; ret
0x000000000009b21c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x00000000000ab7a7 : add byte ptr [rax - 0x77], cl ; sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000bed64 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013ed45 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x00000000000abbc3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000abbeb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x0000000000170d2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000120183 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bf2bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000000370e8 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000000e8c1a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000001059ed : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000000000115c58 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000123e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000118869 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000a5a57 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000abbc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x00000000000bb60c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b9fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abbec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017b75c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017b72c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013fa4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000000f561c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000004725c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005acbd : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005aed0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a703 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001059ef : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000000000170d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000017b76c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000bb02c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000014b2c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120184 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000bc43c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000bf2bc : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000170e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000bafdb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bafeb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017b70a : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000bafca : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000bf277 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x00000000000a20b6 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000bf278 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x0000000000170e0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000945d3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x0000000000154bfb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x0000000000170e7d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000003bf55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004c39d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bf2bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000af2dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000017b70b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000bafcb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000be09b : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000c9c1a : add byte ptr [rax], al ; add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x000000000011a4dc : add byte ptr [rax], al ; add rsp, 8 ; mov eax, r8d ; ret
0x0000000000115c5a : add byte ptr [rax], al ; cmova eax, edx ; ret
0x000000000013f606 : add byte ptr [rax], al ; cmovb eax, edx ; ret
0x0000000000123e9d : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000046f60 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000011886b : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bf2b2 : add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000a3585 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d2313 : add byte ptr [rax], al ; cmovg r9d, eax ; mov eax, r9d ; ret
0x00000000000d22f1 : add byte ptr [rax], al ; cmovl r9d, eax ; mov eax, r9d ; ret
0x00000000000f1592 : add byte ptr [rax], al ; cmovne eax, edx ; pop rbx ; ret
0x00000000000e017a : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a5a18 : add byte ptr [rax], al ; cmovne r8, rax ; mov rax, r8 ; ret
0x00000000000e816d : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000012ab6e : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000969de : add byte ptr [rax], al ; endbr64 ; mov rax, rdi ; ret
0x00000000000c9c1b : add byte ptr [rax], al ; je 0xc9c2a ; mov eax, r8d ; ret
0x00000000000abbc6 : add byte ptr [rax], al ; mov byte ptr [rax], 0 ; ret
0x000000000018c793 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef5c3 : add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000bb60e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b9fce : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000abbee : add byte ptr [rax], al ; mov dword ptr [rax], ecx ; ret
0x000000000017b75e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017b74e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017b72e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000013e49c : add byte ptr [rax], al ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000abcbe : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000bb00e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000005adb0 : add byte ptr [rax], al ; mov dword ptr [rdx], 0xffffc002 ; ret
0x00000000000983b0 : add byte ptr [rax], al ; mov dword ptr [rip + 0x152ef4], eax ; ret
0x000000000014b297 : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x00000000001101d8 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000bacce : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000013fa4e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x00000000000f561e : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000004443c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbp ; ret
0x0000000000027a34 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000005acbf : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000005aed2 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000004a705 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000180e4e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000132b96 : add byte ptr [rax], al ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000a0897 : add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x00000000001612d3 : add byte ptr [rax], al ; mov eax, r12d ; pop rbp ; pop r12 ; ret
0x00000000001172da : add byte ptr [rax], al ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a49d : add byte ptr [rax], al ; mov eax, r8d ; add rsp, 8 ; ret
0x0000000000032b53 : add byte ptr [rax], al ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x0000000000084bc1 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; pop rbp ; ret
0x0000000000046a6d : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x000000000008fec4 : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000000000ba00e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b9ffe : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001628a7 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000016285f : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000162d92 : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000017b79e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017b7ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017b7be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017b7ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017b7de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017b7ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017b78e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017b76e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb01e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000ab859 : add byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000bb05e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb06e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb07e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb08e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb04e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000bb02e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000005acd8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x0000000000085978 : add byte ptr [rax], al ; mov qword ptr [rdx + 0xe0], rcx ; ret
0x0000000000098389 : add byte ptr [rax], al ; mov qword ptr [rip + 0x152efe], rax ; ret
0x0000000000098360 : add byte ptr [rax], al ; mov qword ptr [rip + 0x152f1f], rax ; ret
0x0000000000098340 : add byte ptr [rax], al ; mov qword ptr [rip + 0x152f37], rax ; ret
0x000000000014b288 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b2d6 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000014b224 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000374ad : add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x000000000014211e : add byte ptr [rax], al ; mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x00000000000460ac : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000d2cae : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000d2cbe : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000d2cce : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000d2cde : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000d2cee : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000d2cfe : add byte ptr [rax], al ; mov rax, 7 ; ret
0x0000000000120186 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000004a548 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000443dc : add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000000d31df : add byte ptr [rax], al ; mov rax, r12 ; pop r12 ; ret
0x00000000000657d5 : add byte ptr [rax], al ; mov rax, r12 ; pop rbp ; pop r12 ; ret
0x000000000011a3e3 : add byte ptr [rax], al ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000160167 : add byte ptr [rax], al ; mov rax, r8 ; pop rbp ; ret
0x000000000009ce2f : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015635d : add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x000000000009b21f : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000018b9ae : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000003bdf5 : add byte ptr [rax], al ; mov rax, r9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009268b : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093206 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb29e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000018e5be : add byte ptr [rax], al ; mov rax, rdi ; vzeroupper ; ret
0x00000000000bed63 : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000ba03e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000005e64e : add byte ptr [rax], al ; mov rsp, rdx ; ret
0x0000000000116de9 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000abafe : add byte ptr [rax], al ; mov word ptr [rdi], dx ; add rax, rdi ; ret
0x000000000018d60e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x000000000004b318 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000093f61 : add byte ptr [rax], al ; movzx eax, bl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf2be : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000170e7e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000170e0e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017b73c : add byte ptr [rax], al ; nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bafdd : add byte ptr [rax], al ; nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000baffc : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bafed : add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x000000000017b77d : add byte ptr [rax], al ; nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb03d : add byte ptr [rax], al ; nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000018d87d : add byte ptr [rax], al ; nop ; mov rax, rdi ; vzeroupper ; ret
0x000000000017b71d : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017b70c : add byte ptr [rax], al ; nop ; mov word ptr [rcx], dx ; ret
0x00000000000bafcc : add byte ptr [rax], al ; nop ; mov word ptr [rdi], dx ; ret
0x00000000000be09c : add byte ptr [rax], al ; nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000017b6fa : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bafba : add byte ptr [rax], al ; nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x00000000000b992a : add byte ptr [rax], al ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x0000000000045147 : add byte ptr [rax], al ; or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x00000000000bf279 : add byte ptr [rax], al ; pop rbx ; cmove rax, rdx ; ret
0x000000000009cd52 : add byte ptr [rax], al ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x0000000000117316 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x000000000013f1ff : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000000a20b8 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000091486 : add byte ptr [rax], al ; xor r8d, r8d ; mov rax, r8 ; ret
0x0000000000037048 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x0000000000037128 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x0000000000065ff5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000008b635 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000e8c15 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x00000000001028dd : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x00000000001289ed : add byte ptr [rax], r8b ; mov eax, r8d ; ret
0x00000000000b9ffd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fdb5 : add byte ptr [rax], r8b ; mov rax, r8 ; ret
0x00000000000bb29d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000ba03d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a59dd : add byte ptr [rax], r8b ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000000e8144 : add byte ptr [rbp + 0x1c], dh ; mov eax, 0xfffa ; ret
0x00000000000d31ef : add byte ptr [rbp + 0x31], al ; in al, 0x4c ; mov eax, esp ; pop r12 ; ret
0x00000000000e67e5 : add byte ptr [rbp + 0x41], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000009d618 : add byte ptr [rbp + 0x4c], bl ; mov eax, eax ; pop r12 ; pop r13 ; ret
0x00000000000594ff : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000e8265 : add byte ptr [rbp + 8], dh ; mov eax, 0x40 ; ret
0x0000000000110a16 : add byte ptr [rbx + 0x47426f8], al ; mov eax, r9d ; ret
0x00000000000ba00f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000180e4f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000bf27a : add byte ptr [rbx + 0x48], bl ; cmove eax, edx ; ret
0x000000000009cd53 : add byte ptr [rbx + 0x4c], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000008e7c5 : add byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; pop r12 ; ret
0x00000000000bf34e : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000bf347 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000bf340 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000bf339 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000bf35c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bf355 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000011fedf : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x000000000011a033 : add byte ptr [rbx], ah ; mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000000ee8df : add byte ptr [rcx + 0xf], al ; mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000ce304 : add byte ptr [rcx + rcx*4 + 0x42], 4 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000ab8b8 : add byte ptr [rcx + rcx*4 + 7], cl ; mov rax, r12 ; pop r12 ; ret
0x000000000008caac : add byte ptr [rcx - 0x75], cl ; mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000116de7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x000000000012898a : add byte ptr [rcx], al ; mov eax, r8d ; add rsp, 8 ; ret
0x000000000013aa8e : add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x00000000000641d7 : add byte ptr [rcx], al ; mov eax, r8d ; pop rbx ; ret
0x000000000015fc1c : add byte ptr [rcx], al ; mov rax, r8 ; pop rbp ; ret
0x0000000000037108 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x0000000000057e55 : add byte ptr [rcx], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000beb52 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000037008 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x0000000000170e0f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000125bc4 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x125b55 ; loopne 0x125bd5 ; ret
0x00000000000371a1 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x37132 ; loopne 0x371b2 ; ret
0x00000000000945d5 : add byte ptr [rdi], cl ; mov cl, 0x15 ; ret
0x0000000000154bfd : add byte ptr [rdi], cl ; mov cl, 0x15 ; retf
0x0000000000170e7f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018d51f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000ed6ef : add byte ptr [rdi], cl ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003bf57 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004be87 : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e9ecf : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d8039 : add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000bf2bf : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000093f62 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ad50f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000187ddf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000af7cf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af7df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af7bf : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af2cf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000af2ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af2ef : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000af2df : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000017972f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x0000000000149572 : add byte ptr [rdx + 0x75], ah ; or al, 0xf ; mov bh, 0x35 ; ret
0x00000000000374ab : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000037068 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000017b73d : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000baffd : add byte ptr [rsi - 0x70], ah ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b9fdd : add byte ptr [rsi - 0x70], ah ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000017b70d : add byte ptr [rsi - 0x70], ah ; mov word ptr [rcx], dx ; ret
0x00000000000bafcd : add byte ptr [rsi - 0x70], ah ; mov word ptr [rdi], dx ; ret
0x00000000000be09d : add byte ptr [rsi - 0x70], ah ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000c9c1c : add byte ptr [rsp + rax + 0x44], dh ; mov eax, eax ; ret
0x000000000008b03a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000170c52 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000004b14c : add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x0000000000037028 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x0000000000034918 : add cl, ch ; mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x00000000000ab797 : add dh, al ; inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x00000000000be0db : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x000000000013049e : add dword ptr [rax + 0x3b], ecx ; pop rbp ; mov eax, 0x89483e74 ; ret
0x00000000000ef5bf : add dword ptr [rax + 1], edi ; mov byte ptr [rdi], 0x5b ; ret
0x00000000000bed62 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000046f5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000ef5c1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov byte ptr [rdi], 0x5b ; ret
0x0000000000150084 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000a0895 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r12d ; pop r12 ; ret
0x000000000008fec2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x000000000005acd6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000014b286 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a27e5 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000a2272 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000a2881 : add dword ptr [rax], r8d ; cmovne rax, rdx ; ret
0x00000000000587ab : add dword ptr [rbp - 0x1e], esi ; mov eax, 1 ; ret
0x0000000000170cc2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000049c5a : add dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000013f668 : add dword ptr [rcx + rcx*4 - 0x40], ecx ; mov byte ptr [r8 + 2], 0 ; ret
0x00000000000bf1b6 : add dword ptr [rdi + 0x15], esi ; jb 0xbf1c4 ; mov byte ptr [rdi], cl ; ret
0x000000000015a8a4 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000015a8b4 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000037109 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x00000000000ab983 : add dword ptr [rdi], ecx ; mov esi, 0xf2390714 ; je 0xab989 ; ret
0x00000000000b6b44 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000105c03 : add dword ptr [rdx + 2], edi ; cmove eax, edx ; ret
0x00000000001931c0 : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000192af1 : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000b6ad5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000000a2271 : add dword ptr cs:[rax], eax ; cmovne rax, rdx ; ret
0x00000000000a2824 : add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x000000000009d24a : add eax, 0x14dc91 ; mov qword ptr [rax], rdi ; ret
0x0000000000099350 : add eax, 0x151b8b ; mov qword ptr [rax], rdx ; ret
0x0000000000055b7a : add eax, 0x1987c1 ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000036c72 : add eax, 0x1b4171 ; mov qword ptr [rax], rdx ; ret
0x00000000000374aa : add eax, 0x200 ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000ba096 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000123e54 : add eax, 0x91827 ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000144176 : add eax, 0xa6e75 ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000125946 : add eax, 0xc5515 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000125001 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125042 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000e0178 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000013094a : add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000008b1c1 : add eax, dword ptr [rbx + rcx*4] ; mov eax, r8d ; ret
0x00000000000a1b36 : add ebx, dword ptr [rbx + 0x44] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000443c0 : add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x0000000000170be2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000013f598 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x00000000000966d2 : add edx, 0x60 ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x000000000013f4ee : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000be139 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x000000000014b6cf : add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x000000000015a4ba : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x00000000000becce : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001621e7 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000443bf : add r11, qword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x000000000004b14b : add r9b, byte ptr [r15] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x000000000013f597 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000000abbbb : and al, 0x10 ; mov qword ptr [rax], rdx ; ret
0x00000000000abb75 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abae3 : and al, 0x18 ; mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000abb54 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc32 : and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x000000000003f5a6 : and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x00000000000abc19 : and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x00000000000abc01 : and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb3c : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abbe3 : and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb1e : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000be456 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000e81ed : and byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e82bb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000be457 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000370e9 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000097f10 : and eax, 0xfffffffd ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000097e97 : and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000088a94 : and ebx, dword ptr [rbx + 0x4c] ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x000000000011a034 : and ecx, dword ptr [rcx + rcx*4 - 0x40] ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000004514b : and edx, eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000454b0 : and esi, 0x80000000 ; mov dword ptr [rdi], esi ; ret
0x000000000004514a : and rdx, rax ; mov qword ptr [rdi], rdx ; ret
0x00000000001537dd : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000bfb83 : cdq ; add dword ptr es:[rax], eax ; cmove rax, rdx ; ret
0x0000000000097e84 : cdqe ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000014b6ce : clc ; add esi, dword ptr [rsi + 0xe] ; mov eax, 2 ; ret
0x0000000000097ed8 : clc ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000018c9df : clc ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x0000000000119fb5 : clc ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016a897 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016b207 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170187 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b407 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001700f7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b607 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170067 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016a8b3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bf1c2 : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000018ebe1 : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x0000000000192ac0 : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000bed8e : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000005e82b : clc ; or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x00000000000d31a9 : clc ; sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x000000000005954a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000bf38a : cld ; inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x000000000018c9bd : cld ; mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000016b022 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016b225 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b425 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b625 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bf1ca : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000018ebec : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000192ad2 : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000bed9c : cld ; mov dword ptr [rdi], esi ; ret
0x00000000000bed96 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000015a4f9 : cld ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x000000000016ac56 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170316 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae36 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170296 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b016 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170216 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016aa76 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170396 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bf1b5 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xbf1c5 ; mov byte ptr [rdi], cl ; ret
0x000000000015a8b3 : cli ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x00000000001931bf : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x0000000000192af0 : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf2af : cli ; inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x000000000016fe12 : cli ; mov ah, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000000abbe4 : cli ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abcac : cli ; mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb1f : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000010f903 : cli ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000016b428 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000966e3 : cli ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000015a8c3 : cli ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010f8f3 : cli ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116803 : cli ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008ff03 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fed3 : cli ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000097f23 : cli ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000e1463 : cli ; mov eax, dword ptr [rdi] ; ret
0x0000000000091073 : cli ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091083 : cli ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000047223 : cli ; mov eax, dword ptr [rip + 0x1a3f7e] ; ret
0x0000000000047213 : cli ; mov eax, dword ptr [rip + 0x1a3f92] ; ret
0x000000000015a443 : cli ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1413 : cli ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969d3 : cli ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000969b3 : cli ; mov rax, qword ptr [rip + 0x155be5] ; ret
0x00000000000329f3 : cli ; mov rax, qword ptr [rip + 0x1bac4d] ; ret
0x0000000000029033 : cli ; mov rax, qword ptr [rip + 0x1c7e4d] ; ret
0x0000000000029023 : cli ; mov rax, qword ptr [rip + 0x1c7e6d] ; ret
0x000000000010f8c3 : cli ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000bf0d6 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000017029a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acae : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000195073 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000009701d : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000009701c : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000131b70 : cmovl ecx, dword ptr [rcx + 0x415d5be0] ; pop rsp ; ret
0x000000000008ffe0 : cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000012ab71 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000e8ded : cmovns eax, dword ptr [rbx + 0x394810c1] ; ret
0x00000000000a86e2 : cmovns eax, dword ptr [rbx + 0x394c01c1] ; retf 0xed75
0x000000000007bd3e : cmovns eax, dword ptr [rbx - 0x76b20f20] ; ret
0x0000000000119975 : cmovns eax, dword ptr [rbx - 0x76b30f1f] ; retf 0x2aeb
0x000000000015c556 : cmovns eax, dword ptr [rcx] ; retf 0x8948
0x000000000012ab70 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000af07c : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000000824a0 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret
0x000000000014a4b8 : cmovs eax, dword ptr [rbx - 0x3fcef73c] ; pop rbx ; pop rbp ; ret
0x0000000000107321 : cmovs eax, dword ptr [rbx - 0x76b70f20] ; ret
0x0000000000058a87 : cmovs ebp, dword ptr [rcx] ; retf 0x8348
0x0000000000099ae5 : cmovs ecx, dword ptr [rbx - 0x173ef7be] ; add al, 0x39 ; ret
0x0000000000197656 : cmp al, 0xf ; mov gs, word ptr [rdi - 0x72000006] ; ret
0x00000000000b4644 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000b4643 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000f394e : cmp byte ptr [rdi], cl ; mov dh, 0x14 ; cmp ch, cl ; ret
0x00000000000f394d : cmp byte ptr [rdi], r9b ; mov dh, 0x14 ; cmp ch, cl ; ret
0x000000000003580d : cmp byte ptr [rsi + 0x17], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000018b0f1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000193a8e : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000192aef : cmp dl, 1 ; jb 0x192b01 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001931be : cmp dl, 1 ; jb 0x1931cc ; mov byte ptr [rdi], cl ; ret
0x00000000000887a0 : cmp dword ptr [rbx + 0x44], ebx ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a209f : cmp dword ptr [rdi + 8], esi ; jb 0xa20b8 ; mov qword ptr [rdi], rsi ; ret
0x000000000008d8a1 : cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x000000000011c851 : cmp dword ptr [rsi], 0 ; mov rbx, rsi ; je 0x11c869 ; pop rbx ; ret
0x0000000000163aa2 : cmp eax, -1 ; sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000096aff : cmp eax, edx ; jae 0x96b2f ; movzx eax, byte ptr [rax] ; ret
0x000000000014210d : cmp ebx, ecx ; jg 0x1420ce ; mov byte ptr [r10], 0 ; ret
0x00000000000beccb : cmp edi, edx ; jb 0xbecd8 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000008ffdd : cmp esi, 2 ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000018fc30 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000018e6d9 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a209e : cmp qword ptr [rdi + 8], rsi ; jb 0xa20b9 ; mov qword ptr [rdi], rsi ; ret
0x000000000008d8a0 : cmp qword ptr [rdx + 0x48], r8 ; cmovne eax, ecx ; ret
0x000000000014210c : cmp r11d, r9d ; jg 0x1420cf ; mov byte ptr [r10], 0 ; ret
0x0000000000096afe : cmp rax, rdx ; jae 0x96b30 ; movzx eax, byte ptr [rax] ; ret
0x00000000000becca : cmp rdi, rdx ; jb 0xbecd9 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000160e86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; movsd dword ptr [rdi], dword ptr [rsi] ; or byte ptr [rax], al ; test edi, edi ; jns 0x160e98 ; ret
0x0000000000097e85 : cwde ; mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000b4d19 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000000a3a14 : dec dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x0000000000085d83 : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125ce7 : dec dword ptr [rcx] ; setbe r8b ; mov eax, r8d ; ret
0x0000000000126595 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x126526 ; loopne 0x1265a6 ; ret
0x000000000003723a : dec dword ptr [rdi] ; mov bh, 4 ; js 0x371cb ; loopne 0x3724b ; ret
0x00000000000ee3d4 : dec dword ptr [rdi] ; mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x0000000000060936 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0x89 ; fdiv st(6) ; ret
0x000000000005f293 : dec dword ptr [rdi] ; mov dh, 0x58 ; or al, 0xf6 ; ret
0x0000000000045db9 : div byte ptr [rbp + 0xc] ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000ab78e : div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000011033a : div dword ptr [rdi - 0x15] ; mov eax, r8d ; ret
0x000000000010f900 : endbr64 ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000015a8c0 : endbr64 ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e1460 : endbr64 ; mov eax, dword ptr [rdi] ; ret
0x00000000000e1410 : endbr64 ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000969d0 : endbr64 ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000008b1bf : enter 0x373, 0x44 ; mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x000000000009d24c : fcom qword ptr [rax + rax] ; mov qword ptr [rax], rdi ; ret
0x00000000000a5dbb : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edi ; ret
0x00000000000b978e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000004cf7a : fimul word ptr [rax + 0xf] ; mov esi, 0x83480143 ; ret
0x00000000000f3a18 : fimul word ptr [rdi] ; mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000004d9d8 : fisttp dword ptr [rdi] ; mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000059c6f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000003b171 : fisttp word ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5541 : fld dword ptr [rdi + 0xf] ; mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x00000000000a3669 : fmul dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000000ee41f : fmul qword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000465a8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000000a4e43 : fyl2xp1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000abc02 : hlt ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abcda : hlt ; mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000abb3d : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x000000000017021a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae9e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000195063 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x000000000002a77a : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x0000000000090666 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a995 : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011a01b : in al, dx ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000016ae9a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000abc1a : in al, dx ; mov word ptr [rax + 4], dx ; ret
0x00000000000be239 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be24f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be271 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be28f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2af : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be2d5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be2f1 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be311 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be331 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be357 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be379 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be397 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3b7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be3d3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be3f3 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be413 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be433 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be459 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4a9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be17f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be19d : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1bd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be1df : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be1ff : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be21f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be0b5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be0c7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be0dd : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be0f5 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be10b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be11d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be13b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be147 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be15d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be0a1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000004a35f : in eax, dx ; mov cl, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000016acaa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008ffde : inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000ab799 : inc dword ptr [r8] ; mov qword ptr [rdx], rcx ; ret
0x00000000000bf2b0 : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; ret
0x00000000000c9c19 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc9c2c ; mov eax, r8d ; ret
0x0000000000132bb0 : inc dword ptr [rax] ; mov eax, edi ; or eax, esi ; bswap eax ; ret
0x00000000000ab79a : inc dword ptr [rax] ; mov qword ptr [rdx], rcx ; ret
0x0000000000119fb8 : inc dword ptr [rax] ; mov rax, r8 ; ret
0x00000000000bf38b : inc dword ptr [rbx] ; div ecx ; mov eax, eax ; ret
0x00000000000d9232 : inc dword ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000016266c : inc dword ptr [rcx + 0xf] ; mov dh, 0x49 ; add al, 0x89 ; retf 0xeac0
0x0000000000150068 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000017006b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b46f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014c200 : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012feee : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000195033 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000000595b2 : jae 0x59604 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008b1c0 : jae 0x8b1cd ; mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000096b01 : jae 0x96b2d ; movzx eax, byte ptr [rax] ; ret
0x000000000018e6da : jb 0x18e6e8 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018ebc7 : jb 0x18ebd2 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000192af2 : jb 0x192afe ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001931a9 : jb 0x1931b8 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000001931b4 : jb 0x1931c7 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000001931c1 : jb 0x1931c9 ; mov byte ptr [rdi], cl ; ret
0x000000000019346a : jb 0x193478 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193a8f : jb 0x193a9a ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000089245 : jb 0x8926b ; mov dword ptr [rcx], eax ; ret
0x00000000000893ec : jb 0x89412 ; mov dword ptr [rcx], eax ; ret
0x00000000000a20a2 : jb 0xa20b5 ; mov qword ptr [rdi], rsi ; ret
0x00000000000beccd : jb 0xbecd6 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000bed7a : jb 0xbed88 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bed79 : jb 0xbed89 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bf1b9 : jb 0xbf1c1 ; mov byte ptr [rdi], cl ; ret
0x000000000003580e : jbe 0x3582e ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000119f17 : je 0x119f21 ; mov qword ptr [rax], rdx ; ret
0x000000000011a01a : je 0x11a011 ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011b86c : je 0x11b87c ; mov dword ptr [rip + 0xcfad4], edi ; ret
0x0000000000124fff : je 0x125077 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x0000000000125040 : je 0x125078 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000156262 : je 0x1561ec ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000018c06f : je 0x18c0f8 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000018ce0f : je 0x18ce98 ; mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x000000000004a5e4 : je 0x4a5f5 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x000000000008e02a : je 0x8e041 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8e041 ; ret
0x000000000014210f : jg 0x1420cc ; mov byte ptr [r10], 0 ; ret
0x000000000008ffdc : jg 0x8ff6a ; inc byte ptr [rdx] ; cmovne edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000000ba0d6 : jg 0xba0e4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba0ea : jg 0xba0f9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba109 : jg 0xba117 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba119 : jg 0xba127 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba129 : jg 0xba13a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000ba14a : jg 0xba159 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba16a : jg 0xba179 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba18a : jg 0xba199 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba1aa : jg 0xba1bc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba1ed : jg 0xba1ff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba20d : jg 0xba21f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000badc9 : jg 0xbadd7 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000badda : jg 0xbade9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000badf9 : jg 0xbae07 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bae09 : jg 0xbae17 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bae1c : jg 0xbae2d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000bae3a : jg 0xbae49 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bae5a : jg 0xbae69 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bae7a : jg 0xbae89 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bae9d : jg 0xbaeaf ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000baedd : jg 0xbaeef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000baefd : jg 0xbaf0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000bb786 : jg 0xbb798 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000bb7b9 : jg 0xbb7cb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb7d9 : jg 0xbb7eb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc5e9 : jg 0xbc5fb ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc629 : jg 0xbc63b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc649 : jg 0xbc65b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bd3e6 : jg 0xbd3f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bd3fa : jg 0xbd409 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bd419 : jg 0xbd427 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bd429 : jg 0xbd437 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bd439 : jg 0xbd44a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bd45a : jg 0xbd469 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bd47a : jg 0xbd489 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bd49a : jg 0xbd4a9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bd4ba : jg 0xbd4cc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bd4fd : jg 0xbd50f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000bd51d : jg 0xbd52f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000bded6 : jg 0xbdee4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000bdeea : jg 0xbdef9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000bdf09 : jg 0xbdf17 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000bdf19 : jg 0xbdf27 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000bdf29 : jg 0xbdf3a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bdf4a : jg 0xbdf59 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bdf6a : jg 0xbdf79 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bdf8a : jg 0xbdf99 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bdfaa : jg 0xbdfbc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000bdfed : jg 0xbdfff ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be00d : jg 0xbe01f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be236 : jg 0xbe246 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be40f : jg 0xbe470 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be42f : jg 0xbe490 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be4a6 : jg 0xbe4df ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be4a5 : jg 0xbe52e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bf32b : jg 0xbf2f9 ; nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000e8103 : jg 0xe810d ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e811d : jg 0xe8127 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e815a : jg 0xe8164 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000e816b : jg 0xe8175 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e818b : jg 0xe8195 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000059498 : jge 0x594ea ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000a2270 : jl 0xa22a8 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000003320a : jle 0x33239 ; sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x0000000000036c73 : jno 0x36cbd ; sbb eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000089241 : jno 0x8924f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000893e8 : jno 0x893f6 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000bf9d3 : jns 0xbf9f8 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bfc73 : jns 0xbfca5 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000be136 : jns 0xffffffffed3be49c ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be198 : jns 0xffffffffed3be8fe ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1b8 : jns 0xffffffffed3bea1e ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000373b7 : jo 0x37408 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000373b6 : jo 0x37409 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000008b0de : jo 0x8b127 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000014c203 : jp 0x14c263 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000003580c : jp 0x3584f ; jbe 0x35830 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000a2c79 : jrcxz 0xa2c41 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000373c7 : js 0x37418 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000373c6 : js 0x37419 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000be0d8 : js 0xffffffffed3be33e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be106 : js 0xffffffffed3be56c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be158 : js 0xffffffffed3be9be ; mov byte ptr [rdi + 9], ch ; ret
0x000000000013f7f7 : lea eax, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000014c2bd : lea eax, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000123e53 : lea eax, [rip + 0x91827] ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000008870a : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000004724d : lea edx, [rax + 1] ; mov dword ptr [rip + 0x1a3f56], edx ; ret
0x000000000008b0a4 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089240 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x00000000000becd8 : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000013f7f6 : lea r8, [rdi + rsi + 8] ; mov rax, r8 ; ret
0x000000000014c2bc : lea r8d, [rdx + rax] ; pop rbx ; pop rbp ; mov eax, r8d ; ret
0x0000000000088709 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000008b0a3 : lea rdx, [r8 + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000becd7 : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000a3a13 : leave ; dec dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000000b9791 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000014de10 : loop 0x14de9a ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000005949b : loope 0x594ed ; mov dword ptr [rdi], ecx ; ret
0x00000000000594cc : loope 0x5951f ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000005954d : loope 0x595a0 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000018ca25 : loopne 0x18ca72 ; mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x0000000000097e98 : loopne 0x97ea1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000097eda : loopne 0x97ee3 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000097f11 : loopne 0x97f17 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000d4320 : loopne 0xd432a ; add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000150120 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000010c330 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010c97b : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000130ac8 : mov ah, 0xd8 ; add eax, dword ptr [rax] ; cmovne rax, rdx ; ret
0x000000000016fe13 : mov ah, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000143fac : mov al, 0x14 ; out dx, al ; dec dword ptr [rax + 0x39] ; ret
0x00000000000ed755 : mov al, 0xe8 ; mov ch, 0x7b ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bac3c : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000ba83c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000000b6b6b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b6b99 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b6c1d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000017da60 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b6b45 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000055c32 : mov al, byte ptr [rdi - 0x5a17ffe7] ; retf
0x00000000000b6b55 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000170e11 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000018c0f1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000256bb : mov bh, 0x1c ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000036d5a : mov bh, 0x44 ; mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x00000000000e14c5 : mov bh, 0x48 ; adc byte ptr [rax + 1], cl ; retf 0x8b49
0x0000000000193ba8 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000000d5544 : mov bh, 0x4c ; dec byte ptr [rbp - 0x77] ; retf
0x000000000004b14a : mov bh, 0x4d ; add cl, byte ptr [rdi] ; mov bh, 0x45 ; add al, 0x89 ; retf 0xe0c1
0x00000000000abb52 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc17 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rax + 4], dx ; ret
0x000000000008caaf : mov bh, 0x90 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000008bab5 : mov bh, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x0000000000029dc1 : mov bh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000010f8c5 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000111042 : mov bl, 0 ; add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000019549e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014537b : mov bl, 0xa ; add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000142111 : mov byte ptr [r10], 0 ; ret
0x000000000013f66c : mov byte ptr [r8 + 2], 0 ; ret
0x0000000000029c62 : mov byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013f66d : mov byte ptr [rax + 2], 0 ; ret
0x00000000000abbe5 : mov byte ptr [rax + 2], dl ; ret
0x00000000000abc03 : mov byte ptr [rax + 4], dl ; ret
0x00000000000abc34 : mov byte ptr [rax + 6], dl ; ret
0x0000000000037f34 : mov byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; enter -0x3f77, 0xf ; retf 0x149
0x0000000000055b7f : mov byte ptr [rax + rdx], 0 ; ret
0x0000000000029c63 : mov byte ptr [rax - 0x7d], cl ; ret
0x00000000000ab858 : mov byte ptr [rax], 0 ; mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x00000000000abbc8 : mov byte ptr [rax], 0 ; ret
0x000000000012b155 : mov byte ptr [rax], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012b13a : mov byte ptr [rax], 0xa ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011fc7f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000581e8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e117 : mov byte ptr [rax], bh ; mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089585 : mov byte ptr [rax], bh ; mov eax, r9d ; ret
0x0000000000066b4f : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000066b50 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9792 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000089584 : mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000102e4e : mov byte ptr [rbp + 0x39000003], bh ; retf 0x8c0f
0x000000000017b723 : mov byte ptr [rcx + 2], dl ; ret
0x000000000017b742 : mov byte ptr [rcx + 4], dl ; ret
0x000000000017b783 : mov byte ptr [rcx + 8], dl ; ret
0x00000000000ab798 : mov byte ptr [rcx - 1], 0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a23ca : mov byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x0000000000055bde : mov byte ptr [rcx], bl ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000eb7aa : mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000017b700 : mov byte ptr [rcx], dl ; ret
0x00000000000be23a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bc5eb : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000badcb : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000be24b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000bb788 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000ba0d8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000be250 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be272 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be290 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2b0 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bb7fe : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000ba12e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bc671 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000bae21 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000be2d1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be2d6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be2f2 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be312 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be332 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bc6f3 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000baea3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000be353 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bb880 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba1b0 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000be358 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be37a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be398 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3b8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be3d4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be3f4 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be414 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be434 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bafa5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000be455 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be45a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4aa : mov byte ptr [rdi + 0x40], ch ; ret
0x000000000018d5f5 : mov byte ptr [rdi + 0x40], cl ; vzeroupper ; ret
0x000000000018ca48 : mov byte ptr [rdi + 0x41], 0 ; vzeroupper ; ret
0x00000000000be180 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be19e : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1be : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be1e0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be200 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be220 : mov byte ptr [rdi + 0xf], ch ; ret
0x000000000018c975 : mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000be0b6 : mov byte ptr [rdi + 1], ch ; ret
0x000000000013f205 : mov byte ptr [rdi + 1], dh ; ret
0x000000000013f204 : mov byte ptr [rdi + 1], sil ; ret
0x000000000018c106 : mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000abcad : mov byte ptr [rdi + 2], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be0c8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000bb636 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b9ff6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc479 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000abb20 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000be0d9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be0de : mov byte ptr [rdi + 3], ch ; ret
0x00000000000abcdb : mov byte ptr [rdi + 4], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be0f6 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb652 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000ba012 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000bc4a7 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000abb3e : mov byte ptr [rdi + 4], dl ; ret
0x00000000000be107 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be10c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000abd14 : mov byte ptr [rdi + 6], al ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000be11e : mov byte ptr [rdi + 6], ch ; ret
0x00000000000abb77 : mov byte ptr [rdi + 6], dl ; ret
0x000000000014de16 : mov byte ptr [rdi + 7], al ; ret
0x00000000000be13c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000ef5d0 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000ef585 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000ef554 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000ef600 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000ef610 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000ef625 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000ef56d : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000ef590 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000be148 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000ba053 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000bc4f9 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bad49 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000be159 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be15e : mov byte ptr [rdi + 9], ch ; ret
0x000000000018c9a2 : mov byte ptr [rdi + r8], 0 ; vzeroupper ; ret
0x000000000018c9a3 : mov byte ptr [rdi + rax], 0 ; vzeroupper ; ret
0x000000000013f3ce : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000016a9fb : mov byte ptr [rdi - 1], dl ; ret
0x00000000000abc80 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018db01 : mov byte ptr [rdi], 0 ; lea rax, [rdi] ; vzeroupper ; ret
0x000000000018c071 : mov byte ptr [rdi], 0 ; vzeroupper ; ret
0x00000000000ef5c5 : mov byte ptr [rdi], 0x5b ; ret
0x00000000000ef5ee : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000be0a2 : mov byte ptr [rdi], ch ; ret
0x00000000000bed7f : mov byte ptr [rdi], cl ; ret
0x000000000018ebc9 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000000abaf1 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000bb610 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b9fd0 : mov byte ptr [rdi], dh ; ret
0x00000000000bc452 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000018e253 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x000000000018c973 : mov byte ptr [rdi], dl ; mov byte ptr [rdi + 1], 0 ; vzeroupper ; ret
0x00000000000bacc2 : mov byte ptr [rdi], dl ; ret
0x000000000018d523 : mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000be0b2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000abaf0 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b991a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000017da89 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b6b6e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000017dab7 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b6b9c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b98b0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b6c20 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000019a208 : mov byte ptr [rdx + rax], dh ; ret
0x0000000000137bda : mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x0000000000142112 : mov byte ptr [rdx], 0 ; ret
0x000000000017da62 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000910af : mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x00000000000b6b47 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000357b3 : mov byte ptr [rip + 0x1b8024], dl ; ret
0x000000000013aa8b : mov byte ptr [rsi + 0xb], dl ; add byte ptr [rcx], al ; mov eax, r8d ; pop rbp ; ret
0x00000000001378fe : mov byte ptr [rsi + 5], dl ; mov rax, rsi ; pop rbx ; ret
0x0000000000119fb6 : mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000011a038 : mov byte ptr [rsi - 1], 0 ; ret
0x00000000000bf921 : mov byte ptr [rsp + rbx*8 - 0x3d], dh ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000011882c : mov byte ptr [rsp], 0 ; mov rax, r12 ; pop r12 ; ret
0x0000000000142110 : mov ch, 0x41 ; mov byte ptr [rdx], 0 ; ret
0x00000000000ed757 : mov ch, 0x7b ; dec dword ptr [rax - 0x77] ; ret
0x0000000000191436 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000165e4d : mov ch, 8 ; add byte ptr [rbp + 0x29], cl ; retf 0x8d4b
0x000000000014f349 : mov cl, 0x15 ; adc dword ptr [rsi], 0x840f000a ; retf 0xfffe
0x00000000000e4a39 : mov cl, 0x15 ; cmp dword ptr [rdi - 0x7bf0fff0], esp ; retf 0xfffe
0x00000000000992a9 : mov cl, 0x15 ; shr dword ptr [rax], 1 ; adc eax, 0x58d4800 ; retf 0x1528
0x00000000001621e4 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000004a360 : mov cl, 0xfd ; dec dword ptr [rax - 0x77] ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000b1f65 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000187dd4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000192af4 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000f3a1a : mov cs, word ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f1ff6 : mov cs, word ptr [rdi] ; add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x00000000000b9ff0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000170e81 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000018d521 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000f6e9a : mov dh, 0x40 ; or al, byte ptr [rcx - 0x77] ; retf 0xe8c0
0x00000000000ed6f1 : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ee8e2 : mov dh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x000000000005e542 : mov dh, 0x43 ; add dword ptr [rax + rax*8 - 0x7cb6f78c], eax ; ret
0x000000000003b173 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006981e : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000195071 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000195061 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195031 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000195051 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195041 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000002d257 : mov dh, 0x48 ; dec dword ptr [rax + 0x3948074a] ; ret
0x000000000004be89 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a7166 : mov dh, 0x4d ; add byte ptr [rcx + 0xf], 0x93 ; ret
0x00000000000f6617 : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x000000000003b191 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000abb73 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc30 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abbff : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb3a : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abbe1 : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb1c : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000186d46 : mov dh, 0x54 ; cmp ah, byte ptr [rax] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ee3d6 : mov dh, 0x55 ; add bh, byte ptr [rcx] ; retf
0x00000000000eefcc : mov dh, 0x55 ; add cl, byte ptr [rbp - 0x73] ; add al, 0x39 ; retf
0x000000000006b276 : mov dh, 0x6b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d803b : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000056d63 : mov dh, 0x84 ; and al, 0x87 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000005701e : mov dh, 0x8c ; and al, 0x87 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000efd41 : mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x00000000000d1214 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e837f : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x00000000000bed7d : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000ad511 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000e9dba : mov dh, 0xf3 ; dec dword ptr [rax - 0x77] ; ret
0x000000000015ada7 : mov dh, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000015ade3 : mov dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x00000000000ee168 : mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x000000000016fc7d : mov dh, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x0000000000027e92 : mov dh, 7 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000187de1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa12 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000fc8d7 : mov dh, dl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000111779 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000003491a : mov dl, 5 ; add byte ptr [rax], al ; nop ; ret
0x00000000000ed4f1 : mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c0792 : mov dl, byte ptr [rdi + 0x39480012] ; ret
0x00000000000bace3 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bad02 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bad43 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000016aa80 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc450 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000bacc0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000be0b0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000004d9da : mov dl, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000098323 : mov dword ptr [r11 + 0x14], 0 ; ret
0x000000000004ac73 : mov dword ptr [r11], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000152ec0 : mov dword ptr [r8 + 0x48], eax ; mov eax, 1 ; ret
0x0000000000152f1d : mov dword ptr [r8 + 0x54], eax ; mov eax, 1 ; ret
0x0000000000152eed : mov dword ptr [r8 + 0x58], eax ; mov eax, 1 ; ret
0x000000000013f4f1 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000013f5b8 : mov dword ptr [r8], r11d ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x00000000001347b6 : mov dword ptr [r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e2db0 : mov dword ptr [r8], r9d ; add rsp, 8 ; ret
0x0000000000192aea : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000192ad5 : mov dword ptr [r9 - 4], ecx ; ret
0x00000000000e2658 : mov dword ptr [r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x0000000000089fdd : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a7ac : mov dword ptr [rax + 0x18], edx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098a87 : mov dword ptr [rax + 0x20], edx ; add rsp, 8 ; ret
0x000000000008ff40 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000089581 : mov dword ptr [rax + 0x28], edx ; mov byte ptr [rax], dil ; mov eax, r9d ; ret
0x0000000000089fe1 : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000008b0dd : mov dword ptr [rax + 0x40], esi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000152ec1 : mov dword ptr [rax + 0x48], eax ; mov eax, 1 ; ret
0x0000000000152f1e : mov dword ptr [rax + 0x54], eax ; mov eax, 1 ; ret
0x0000000000152eee : mov dword ptr [rax + 0x58], eax ; mov eax, 1 ; ret
0x00000000000abc1c : mov dword ptr [rax + 4], edx ; ret
0x0000000000095915 : mov dword ptr [rax + 8], 0 ; ret
0x00000000000f2ae3 : mov dword ptr [rax + rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015adc1 : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000011c938 : mov dword ptr [rax], 0x16 ; ret
0x00000000000d32f8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000163c5c : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x00000000000443d8 : mov dword ptr [rax], 0x2a ; mov rax, r11 ; ret
0x00000000000859b4 : mov dword ptr [rax], 0x89480000 ; ret
0x000000000009b21b : mov dword ptr [rax], 0xc ; mov rax, r8 ; ret
0x000000000011c8f1 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x00000000000a1adc : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000011741c : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x0000000000120178 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000055378 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d2173 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000169362 : mov dword ptr [rax], ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000006ed23 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f5b9 : mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x00000000001347b7 : mov dword ptr [rax], ecx ; add rsp, 0x18 ; ret
0x00000000000e2db1 : mov dword ptr [rax], ecx ; add rsp, 8 ; ret
0x000000000008870e : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000abbf0 : mov dword ptr [rax], ecx ; ret
0x0000000000119eb5 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000101e1f : mov dword ptr [rax], edi ; mov rax, r8 ; ret
0x000000000009d250 : mov dword ptr [rax], edi ; ret
0x0000000000122127 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013f2cd : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000004ae1d : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000013f4f2 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000036c78 : mov dword ptr [rax], edx ; ret
0x000000000008b0a8 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000abbd1 : mov dword ptr [rax], esi ; ret
0x00000000000f5610 : mov dword ptr [rbp + 0x30], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5548 : mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f560f : mov dword ptr [rbp + 0x30], r8d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d2a2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d2a1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000033227 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000001628aa : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000097e87 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000012aad3 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000098324 : mov dword ptr [rbx + 0x14], 0 ; ret
0x000000000015a916 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162862 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000012ab23 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014cd48 : mov dword ptr [rbx + 0x20], esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010269f : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008ff59 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000012092d : mov dword ptr [rbx + 0x38], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045ddf : mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000045dbc : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000008afce : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000965e8 : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000092f0e : mov dword ptr [rbx + 0x70], 0xffffffff ; pop rbx ; ret
0x000000000008a07a : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a67e : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f543 : mov dword ptr [rbx + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010f66b : mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000331f7 : mov dword ptr [rbx + 8], eax ; cmp eax, -3 ; je 0x33221 ; pop rbx ; ret
0x000000000012aa83 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011c926 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000094fe2 : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000162d95 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a1b35 : mov dword ptr [rbx], eax ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000a028d : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156266 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000011c8cc : mov dword ptr [rbx], eax ; pop rbx ; setne al ; movzx eax, al ; ret
0x0000000000064076 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004ac74 : mov dword ptr [rbx], ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a7b1 : mov dword ptr [rbx], ecx ; pop rbx ; ret
0x00000000000bfe93 : mov dword ptr [rbx], edx ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000066b4d : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ed21 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163aa8 : mov dword ptr [rbx], edx ; pop rbx ; ret
0x0000000000085d86 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098954 : mov dword ptr [rbx], esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a93 : mov dword ptr [rbx], esp ; pop rbx ; mov rax, r8 ; pop rbp ; pop r12 ; ret
0x00000000001449dc : mov dword ptr [rbx], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001449db : mov dword ptr [rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e64a : mov dword ptr [rcx + 0x3a8], edi ; mov rsp, rdx ; ret
0x000000000015bf4b : mov dword ptr [rcx + 0x55], 0xe8e98949 ; retf 0xfff8
0x000000000017b762 : mov dword ptr [rcx + 3], edx ; ret
0x000000000017b753 : mov dword ptr [rcx + 4], edx ; ret
0x000000000017b7c4 : mov dword ptr [rcx + 5], edx ; ret
0x000000000017b7d4 : mov dword ptr [rcx + 6], edx ; ret
0x000000000017b7a3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000017b794 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000589cc : mov dword ptr [rcx + rcx*8], eax ; xor eax, eax ; ret
0x00000000000aba98 : mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x0000000000192aeb : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000192ad6 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000192ac5 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000eb35f : mov dword ptr [rcx], 0xac75c084 ; xor eax, eax ; ret
0x000000000004656e : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000089247 : mov dword ptr [rcx], eax ; ret
0x000000000008db9a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000e2659 : mov dword ptr [rcx], ebx ; mov rax, r8 ; pop rbx ; ret
0x000000000013f5bd : mov dword ptr [rcx], ecx ; ret
0x000000000013f59b : mov dword ptr [rcx], edi ; ret
0x000000000017b721 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017b740 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017b781 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017b760 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017b7a1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017b7b1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017b7c1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017b7d1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017b7e1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017b7f1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017b750 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017b791 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000013f4f5 : mov dword ptr [rcx], edx ; ret
0x0000000000110286 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000bb79d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc60d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bb7db : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bc64b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000bb85d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc6cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba12b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000bae1e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000ba1ad : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000005965f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000be26d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be2ab : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be32d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baea0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba1f0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba210 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba1d1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000011026e : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000116dec : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000bb8c3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bc733 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000ba1f3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000be393 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000015a4fb : mov dword ptr [rdi + 0x18], eax ; mov eax, r8d ; ret
0x0000000000094a47 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009048f : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000bb8a5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc715 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000bb8e3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000bc753 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000ba1d5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000be375 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3b3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000015a5bd : mov dword ptr [rdi + 0x18], edx ; mov eax, r8d ; ret
0x000000000015a485 : mov dword ptr [rdi + 0x18], esi ; mov eax, r8d ; ret
0x000000000015a4bd : mov dword ptr [rdi + 0x18], esi ; mov rax, r8 ; ret
0x000000000015ad8d : mov dword ptr [rdi + 0x20], 0 ; ret
0x00000000000d440b : mov dword ptr [rdi + 0x20], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013e49e : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000bb81d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc68d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba14d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000be2ed : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb7bb : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000bc62b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000bb83d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc6ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba10b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000be28b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be30d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000170cc5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170b08 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170da8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000170c55 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170a98 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb687 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc4d7 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x0000000000170be5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170a28 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba037 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000be137 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000abcf4 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b369 : mov dword ptr [rdi + 4], eax ; xor eax, eax ; ret
0x00000000000bb669 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000bc4b9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x00000000001709b8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000abb57 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000be119 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010f904 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000bb71b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc57b : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170948 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba09b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000be1db : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb73b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc59b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000001708d8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0ab : mov dword ptr [rdi + 6], edx ; ret
0x00000000000be1fb : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb6d9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc539 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bb75b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc5bb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170868 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba079 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000be199 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be21b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x000000000005aee6 : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000094a4b : mov dword ptr [rdi + 8], eax ; ret
0x0000000000097f08 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000595e8 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000bc51b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb6f9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc559 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bb6bb : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000058bf8 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000910d3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000ba06b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000be17b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1b9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000116856 : mov dword ptr [rdi + 8], esi ; ret
0x000000000018d54d : mov dword ptr [rdi + r8 - 2], edx ; vzeroupper ; ret
0x000000000018d569 : mov dword ptr [rdi + r8 - 4], edx ; vzeroupper ; ret
0x000000000018d54e : mov dword ptr [rdi + rax - 2], edx ; vzeroupper ; ret
0x000000000018d56a : mov dword ptr [rdi + rax - 4], edx ; vzeroupper ; ret
0x000000000018d58c : mov dword ptr [rdi + rax - 8], edx ; vzeroupper ; ret
0x00000000000bf1cf : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000beda9 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x000000000018c128 : mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x00000000000bf1c7 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000018ebe9 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000bed99 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000018c13c : mov dword ptr [rdi + rdx - 7], ecx ; vzeroupper ; ret
0x00000000000bf1bf : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bed8b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000016a745 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016a783 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005954f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000016aacc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170318 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acac : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170298 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae9c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170218 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b06d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170189 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b26d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001700f9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b46d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170069 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bafe0 : mov dword ptr [rdi - 1], edx ; ret
0x000000000016ae4d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000016ac65 : mov dword ptr [rdi - 2], edx ; ret
0x000000000016ae49 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000016b229 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016a8ff : mov dword ptr [rdi - 4], edx ; ret
0x000000000016b226 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b426 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b626 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000594ce : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016a787 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016a8fc : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a9f8 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016a944 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170398 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000004a5e6 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000abb29 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x00000000000abc76 : mov dword ptr [rdi], eax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000014d57f : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab8ba : mov dword ptr [rdi], eax ; mov rax, r12 ; pop r12 ; ret
0x00000000000ab85c : mov dword ptr [rdi], eax ; mov rax, r9 ; ret
0x000000000005e69f : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000594c8 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000595e2 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000001168b6 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000bfae3 : mov dword ptr [rdi], ebp ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000000bb655 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000bb6a7 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000abcc0 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rdx - 1] ; ret
0x000000000018c104 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb634 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b9ff4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bc477 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000bace7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000bc4a5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000bad05 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bc4f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000bad47 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb685 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000bc4d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000ba035 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000bb6d7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bc537 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000ba077 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb6f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000bc557 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000ba087 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000001931ab : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000ba098 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba0a8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba0b8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba026 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba068 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000001931b7 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000452fe : mov dword ptr [rdi], ecx ; ret
0x000000000018ebe3 : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000abae6 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x000000000008ddd3 : mov dword ptr [rdi], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb624 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x000000000018db84 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; vzeroupper ; ret
0x00000000000bc464 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x000000000018e264 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; vzeroupper ; ret
0x00000000000bb642 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018dbb2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; vzeroupper ; ret
0x00000000000bc492 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000bb694 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000bc4e4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x000000000018c984 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 2], 0 ; vzeroupper ; ret
0x00000000000bb000 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bb041 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb061 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb071 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb081 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb091 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb010 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000bb051 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000004514e : mov dword ptr [rdi], edx ; ret
0x000000000018c0f4 : mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be0c4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be0f2 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be144 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000abc91 : mov dword ptr [rdi], esi ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000192ad3 : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005acf6 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000192ac2 : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000192ae7 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x00000000000454b6 : mov dword ptr [rdi], esi ; ret
0x000000000010f8e1 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x00000000000abb28 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x000000000015381c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x0000000000089244 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000014c228 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000014c202 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c206 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000150066 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000153724 : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x000000000009173d : mov dword ptr [rdx + 0xe0], ecx ; pop rbx ; ret
0x000000000008597b : mov dword ptr [rdx + 0xe0], ecx ; ret
0x000000000017dae7 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b6bdc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000006619d : mov dword ptr [rdx + 4], 1 ; ret
0x000000000017dac9 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000ce306 : mov dword ptr [rdx + 4], eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000000000b6bbe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000000ce305 : mov dword ptr [rdx + 4], r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000017db7b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x000000000017daf9 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x00000000001797a9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000017db9b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x000000000017db19 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x00000000001797b9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000017db39 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000017dbbb : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b6c60 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000017db59 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000017da4b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b6c42 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000003320f : mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x000000000015ff0a : mov dword ptr [rdx], 0 ; ret
0x000000000005adb2 : mov dword ptr [rdx], 0xffffc002 ; ret
0x000000000017da74 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x000000000017daa2 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x000000000017d9f4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000000465aa : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000005acf8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000005af27 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x0000000000105a10 : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x00000000001059b0 : mov dword ptr [rdx], eax ; mov eax, r9d ; ret
0x000000000004b40a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000d7c2a : mov dword ptr [rdx], eax ; mov rax, r8 ; add rsp, 8 ; ret
0x00000000000b6b59 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000374b1 : mov dword ptr [rdx], eax ; ret
0x00000000000ce309 : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000000000008a32c : mov dword ptr [rdx], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001056fb : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000ab792 : mov dword ptr [rdx], ecx ; ret
0x00000000000e0180 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x0000000000088597 : mov dword ptr [rdx], esp ; add rsp, 8 ; pop rbp ; pop r12 ; ret
0x00000000000a3cfd : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a29e6 : mov dword ptr [rip + 0x14c23c], eax ; ret
0x00000000000983b2 : mov dword ptr [rip + 0x152ef4], eax ; ret
0x000000000009838c : mov dword ptr [rip + 0x152efe], eax ; ret
0x0000000000098363 : mov dword ptr [rip + 0x152f1f], eax ; ret
0x0000000000098343 : mov dword ptr [rip + 0x152f37], eax ; ret
0x0000000000098029 : mov dword ptr [rip + 0x1532b9], eax ; ret
0x0000000000098012 : mov dword ptr [rip + 0x1532c8], eax ; ret
0x0000000000097ff8 : mov dword ptr [rip + 0x1532d2], edx ; ret
0x0000000000097fb9 : mov dword ptr [rip + 0x1532d9], eax ; ret
0x0000000000097fa9 : mov dword ptr [rip + 0x1532f1], eax ; ret
0x00000000000983f6 : mov dword ptr [rip + 0x156784], eax ; ret
0x00000000000983c8 : mov dword ptr [rip + 0x15679e], eax ; ret
0x0000000000047273 : mov dword ptr [rip + 0x1a3f2f], eax ; mov eax, edx ; ret
0x0000000000047250 : mov dword ptr [rip + 0x1a3f56], edx ; ret
0x0000000000026a50 : mov dword ptr [rip + 0x1ca5b2], eax ; ret
0x00000000000256b8 : mov dword ptr [rip + 0x1cb7c2], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000163d40 : mov dword ptr [rip + 0x8ae2a], esi ; ret
0x00000000001300ac : mov dword ptr [rip + 0xbfaa6], eax ; pop rbp ; ret
0x0000000000124b89 : mov dword ptr [rip + 0xc67d1], ebx ; pop rbx ; ret
0x0000000000124b6f : mov dword ptr [rip + 0xc67eb], ebx ; pop rbx ; ret
0x000000000011b86e : mov dword ptr [rip + 0xcfad4], edi ; ret
0x000000000011a7ad : mov dword ptr [rip + 0xd4cbd], eax ; mov rax, r8 ; ret
0x000000000014b28b : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000004b2d9 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000004adb0 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000004adb4 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000910ac : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011632f : mov dword ptr [rsi + 0x48], eax ; ret
0x000000000011594a : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x000000000004b28f : mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x000000000004b31b : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x000000000014b227 : mov dword ptr [rsi + 8], eax ; ret
0x0000000000058784 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; ret
0x00000000001931ba : mov dword ptr [rsi - 2], ecx ; ret
0x00000000001931ad : mov dword ptr [rsi - 4], ecx ; ret
0x000000000014b239 : mov dword ptr [rsi], 0 ; ret
0x000000000014b2d4 : mov dword ptr [rsi], 0xa ; ret
0x000000000014b2db : mov dword ptr [rsi], 0xb ; ret
0x000000000014b2b0 : mov dword ptr [rsi], 0xc ; ret
0x000000000014b293 : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014b2cd : mov dword ptr [rsi], 8 ; ret
0x000000000015a5ba : mov dword ptr [rsi], eax ; mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x0000000000090493 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000013e4a2 : mov dword ptr [rsi], edi ; ret
0x000000000013e9df : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000004ae1f : mov dword ptr [rsi], edx ; mov eax, r8d ; ret
0x000000000015a537 : mov dword ptr [rsi], edx ; mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000169c92 : mov dword ptr [rsi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000044d29 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000044f19 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005ae4c : mov dword ptr [rsp - 0x10], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a50f2 : mov dword ptr [rsp], esi ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001347b5 : mov dword ptr fs:[r8], r9d ; add rsp, 0x18 ; ret
0x00000000000e2daf : mov dword ptr fs:[r8], r9d ; add rsp, 8 ; ret
0x00000000000e2657 : mov dword ptr fs:[r9], ebx ; mov rax, r8 ; pop rbx ; ret
0x000000000011c937 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000d32f7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000163c5b : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x00000000000a1adb : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000120177 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000119eb4 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x000000000013d2a0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001449da : mov dword ptr fs:[rbx], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004656d : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000465a9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000105a0f : mov dword ptr fs:[rdx], eax ; mov eax, r8d ; ret
0x00000000001059af : mov dword ptr fs:[rdx], eax ; mov eax, r9d ; ret
0x00000000000bed98 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000016ac60 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b9fe0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000014be95 : mov eax, 0x100 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116de6 : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000001500f0 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001565ba : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000ef5c0 : mov eax, 1 ; mov byte ptr [rdi], 0x5b ; ret
0x000000000005acd5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000097dc6 : mov eax, dword ptr [0x10] ; ret
0x0000000000128399 : mov eax, dword ptr [r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125068 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125058 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000117d9c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x117dad ; ret
0x0000000000120191 : mov eax, dword ptr [rax + 0x1c8] ; ret
0x000000000012fef0 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000012594b : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011fee0 : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000152d71 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001536b1 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004a54e : mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000035852 : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000012016b : mov eax, dword ptr [rax + 8] ; ret
0x00000000000bf91b : mov eax, dword ptr [rax + rax*4] ; sub eax, dword ptr [r8 + r9*4] ; je 0xbf909 ; ret
0x00000000000589c8 : mov eax, dword ptr [rax + rcx*8] ; mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x00000000000371c9 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000373bb : mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000036cc3 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000126308 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x0000000000150071 : mov eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000035850 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000008b1c3 : mov eax, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000101e1c : mov eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x00000000000371a0 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000004a54b : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014417d : mov eax, dword ptr [rax] ; ret
0x00000000000f14b0 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008ff55 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001561de : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1561f8 ; pop rbx ; ret
0x00000000000b6bd9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000001797a6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x00000000001797b6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000b6c5d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b6c7d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000182eaa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000bf8bd : mov eax, dword ptr [rcx + rax*4] ; sub eax, dword ptr [rcx + r8*4] ; je 0xbf8b1 ; ret
0x0000000000184782 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000008a8cf : mov eax, dword ptr [rcx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017daa0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b6b85 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000017d9f1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001796c1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000017da71 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6b56 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000966e4 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000009670c : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000015a445 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1415 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000015a8c4 : mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000008ffa9 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fe79 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969d5 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000008e02c : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x8e03f ; ret
0x000000000010f8f4 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000116804 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008ff04 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008fed4 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000097f24 : mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000966d6 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000983c5 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x15679e], eax ; ret
0x00000000000e1464 : mov eax, dword ptr [rdi] ; ret
0x0000000000091074 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000091084 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000008d89e : mov eax, dword ptr [rdx + 0x4c] ; cmp dword ptr [rdx + 0x48], eax ; cmovne eax, ecx ; ret
0x0000000000105bc1 : mov eax, dword ptr [rdx + 8] ; ret
0x0000000000037157 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000b1f66 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000036d5c : mov eax, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000035811 : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000088710 : mov eax, dword ptr [rdx] ; ret
0x000000000009d249 : mov eax, dword ptr [rip + 0x14dc91] ; mov qword ptr [rax], rdi ; ret
0x000000000009934f : mov eax, dword ptr [rip + 0x151b8b] ; mov qword ptr [rax], rdx ; ret
0x00000000000969b5 : mov eax, dword ptr [rip + 0x155be5] ; ret
0x0000000000047224 : mov eax, dword ptr [rip + 0x1a3f7e] ; ret
0x0000000000047214 : mov eax, dword ptr [rip + 0x1a3f92] ; ret
0x0000000000036c71 : mov eax, dword ptr [rip + 0x1b4171] ; mov qword ptr [rax], rdx ; ret
0x00000000000329f5 : mov eax, dword ptr [rip + 0x1bac4d] ; ret
0x0000000000029035 : mov eax, dword ptr [rip + 0x1c7e4d] ; ret
0x0000000000029025 : mov eax, dword ptr [rip + 0x1c7e6d] ; ret
0x0000000000125945 : mov eax, dword ptr [rip + 0xc5515] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000373b5 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000373c5 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000035831 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000e5e13 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x00000000001163b4 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; ret
0x00000000000e5ff3 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000e5ecd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x000000000011813f : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x0000000000122409 : mov eax, dword ptr [rsp + 4] ; add rsp, 0x20 ; pop rbp ; ret
0x0000000000123d5c : mov eax, dword ptr [rsp + 4] ; add rsp, 0x28 ; ret
0x0000000000037946 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b3f5 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000001161b8 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x30 ; pop rbp ; ret
0x0000000000124061 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x0000000000111b46 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001234d0 : mov eax, dword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f334 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123596 : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000001259a7 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125a08 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000012839a : mov eax, dword ptr [rsp] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000128398 : mov eax, dword ptr fs:[r12] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f66a : mov eax, eax ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000013f3cc : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000011a036 : mov eax, eax ; mov byte ptr [rsi - 1], 0 ; ret
0x000000000015ff07 : mov eax, eax ; mov qword ptr [rdx], 0 ; ret
0x0000000000119fb4 : mov eax, edi ; mov byte ptr [rsi - 1], 0 ; mov rax, r8 ; ret
0x000000000013f3cb : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000af7d1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af7e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000af7c1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000060b5d : mov ebp, 0x83410014 ; in eax, dx ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000737bc : mov ebp, 0xfffffa68 ; add byte ptr [rdi], cl ; test esp, esi ; retf
0x000000000006c828 : mov ebp, ds ; sar dl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000a6534 : mov ebx, 0x4bb ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e67e9 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000099351 : mov ebx, dword ptr [rbx] ; adc eax, 0x10894800 ; ret
0x000000000004fad1 : mov ebx, dword ptr [rdx - 0x7cb80000] ; ret
0x0000000000192ad0 : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000b1f63 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000016b223 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b423 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b623 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000ba010 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba051 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000170cc3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170c53 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170be3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000170b05 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170a95 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170a25 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001709b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170945 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001708d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170865 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170da5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000b9ff1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000ab7a9 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000bed66 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000126594 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000196fa8 : mov edx, 0x894533ef ; ror byte ptr [rbp + rcx*4 + 0x15], 1 ; retf
0x000000000008ff3c : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000058780 : mov edx, dword ptr [rax + rax*8] ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x000000000018477f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000182ead : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000c038e : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x00000000000581e6 : mov edx, dword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x00000000000ba032 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000ba023 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ba073 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba083 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016ac61 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016b020 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a8b1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bb640 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000bc490 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000ba000 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000018c110 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x00000000000be0f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000bb691 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc4e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000ba041 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000bb621 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc461 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b9fe1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000abbb9 : mov edx, dword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x0000000000142121 : mov edx, eax ; mov byte ptr [r10], 0 ; ret
0x00000000000bf0d5 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001263f8 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000000bc2ae : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000d270e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x00000000000e3d34 : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000012aa34 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bed97 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000001621e3 : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000d8abf : mov esp, 0x110f8 ; add al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; retf 0xfff4
0x00000000000af301 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000af2f1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000014d93b : mov esp, 0x70088 ; add byte ptr [rdi + rcx - 0x49], al ; retf 0xc148
0x000000000002cd03 : mov esp, 0x8514 ; add byte ptr [rax + 0x39], cl ; retf
0x00000000000ba725 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x0000000000197658 : mov gs, word ptr [rdi - 0x72000006] ; ret
0x00000000000589cb : mov qword ptr [r9 + rcx*8], rax ; xor eax, eax ; ret
0x0000000000192ac4 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000013f4f4 : mov qword ptr [r9], r10 ; ret
0x000000000013f5bc : mov qword ptr [r9], rcx ; ret
0x000000000013f59a : mov qword ptr [r9], rdi ; ret
0x0000000000089fdc : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008a7ab : mov qword ptr [rax + 0x18], rdx ; xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000098a86 : mov qword ptr [rax + 0x20], rdx ; add rsp, 8 ; ret
0x000000000008ff3f : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000089fe0 : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000008b0dc : mov qword ptr [rax + 0x40], rsi ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000095914 : mov qword ptr [rax + 8], 0 ; ret
0x000000000011741b : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x000000000013f2cc : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x000000000008870d : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000101e1e : mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x000000000009d24f : mov qword ptr [rax], rdi ; ret
0x0000000000122126 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036c77 : mov qword ptr [rax], rdx ; ret
0x000000000008b0a7 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000033226 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x00000000001628a9 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000097e86 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000015a915 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000162861 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010269e : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x000000000008ff58 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000965e7 : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011c925 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000064075 : mov qword ptr [rbx], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000162d94 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000a028c : mov qword ptr [rbx], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000156265 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000006ed20 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017b7c3 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000017b7d3 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000017b7e3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000017b7f3 : mov qword ptr [rcx + 8], rdx ; ret
0x000000000008db99 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000017b780 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017b7a0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017b7b0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017b7c0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017b7d0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017b7e0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017b7f0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017b790 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017b770 : mov qword ptr [rcx], rdx ; ret
0x000000000005965e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000bb85c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000bc6cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000ba1ac : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba18c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000be32c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bae9f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000ba1ef : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba20f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba1d0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000015a4fa : mov qword ptr [rdi + 0x18], rax ; mov eax, r8d ; ret
0x0000000000094a46 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009048e : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000015a5bc : mov qword ptr [rdi + 0x18], rdx ; mov eax, r8d ; ret
0x000000000015a484 : mov qword ptr [rdi + 0x18], rsi ; mov eax, r8d ; ret
0x000000000015a4bc : mov qword ptr [rdi + 0x18], rsi ; mov rax, r8 ; ret
0x000000000015ad8c : mov qword ptr [rdi + 0x20], 0 ; ret
0x00000000000bb81c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000bc68c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000ba14c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000be2ec : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bb83c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000bc6ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000ba16c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000be30c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000170b07 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170a97 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000170a27 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001709b7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb71a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000bc57a : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000170947 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba09a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000be1da : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000bb73a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000bc59a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000001708d7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0aa : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000be1fa : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000bb75a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000bc5ba : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x0000000000170867 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba0ba : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000be21a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000058bf7 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000595e7 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000005aee5 : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000094a4a : mov qword ptr [rdi + 8], rax ; ret
0x00000000000910d2 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000018d58b : mov qword ptr [rdi + r8 - 8], rdx ; vzeroupper ; ret
0x000000000018c13b : mov qword ptr [rdi + rdx - 7], r9 ; vzeroupper ; ret
0x00000000000bf1be : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bed8a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016a744 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016a782 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005954e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000016aacb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170317 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016acab : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170297 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ae9b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170217 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016b06c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170188 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b26c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001700f8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016b46c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000170068 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000bb020 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000594cd : mov qword ptr [rdi - 8], r9 ; ret
0x000000000016a748 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016a786 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016a8fb : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a9f7 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016a943 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000170397 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d57e : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000ab8b9 : mov qword ptr [rdi], r8 ; mov rax, r12 ; pop r12 ; ret
0x000000000005949c : mov qword ptr [rdi], r9 ; ret
0x00000000000abc75 : mov qword ptr [rdi], rax ; lea rax, [rdi + rdx - 1] ; ret
0x00000000000ab85b : mov qword ptr [rdi], rax ; mov rax, r9 ; ret
0x000000000005e69e : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000bb6a6 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000bad46 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000ba076 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba086 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000ba097 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000ba0a7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000ba0b7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000ba067 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000ba056 : mov qword ptr [rdi], rcx ; ret
0x000000000018ebe2 : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000abae5 : mov qword ptr [rdi], rdx ; add rax, rdi ; ret
0x00000000000bb693 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000bc4e3 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000bb040 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000bb060 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb070 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000bb080 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000bb090 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000bb050 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000004514d : mov qword ptr [rdi], rdx ; ret
0x00000000000be143 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000192ac1 : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000005acda : mov qword ptr [rdi], rsi ; ret
0x0000000000089243 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000014c227 : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014c201 : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014c205 : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000009173c : mov qword ptr [rdx + 0xe0], rcx ; pop rbx ; ret
0x000000000008597a : mov qword ptr [rdx + 0xe0], rcx ; ret
0x000000000017db7a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x00000000001797ea : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000017db9a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000017980a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000017dbba : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000017982a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000017da4a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000017971a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000015ff09 : mov qword ptr [rdx], 0 ; ret
0x000000000017d9f3 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x0000000000124303 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x00000000001796c3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000374b0 : mov qword ptr [rdx], rax ; ret
0x000000000008a32b : mov qword ptr [rdx], rcx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ab791 : mov qword ptr [rdx], rcx ; ret
0x00000000000a29e5 : mov qword ptr [rip + 0x14c23c], rax ; ret
0x000000000009838b : mov qword ptr [rip + 0x152efe], rax ; ret
0x0000000000098362 : mov qword ptr [rip + 0x152f1f], rax ; ret
0x0000000000098342 : mov qword ptr [rip + 0x152f37], rax ; ret
0x0000000000098028 : mov qword ptr [rip + 0x1532b9], rax ; ret
0x0000000000098011 : mov qword ptr [rip + 0x1532c8], rax ; ret
0x0000000000097ff7 : mov qword ptr [rip + 0x1532d2], rdx ; ret
0x0000000000097fb8 : mov qword ptr [rip + 0x1532d9], rax ; ret
0x0000000000097fa8 : mov qword ptr [rip + 0x1532f1], rax ; ret
0x00000000000983f5 : mov qword ptr [rip + 0x156784], rax ; ret
0x0000000000026a4f : mov qword ptr [rip + 0x1ca5b2], rax ; ret
0x0000000000163d3f : mov qword ptr [rip + 0x8ae2a], rsi ; ret
0x00000000001300ab : mov qword ptr [rip + 0xbfaa6], rax ; pop rbp ; ret
0x0000000000124b88 : mov qword ptr [rip + 0xc67d1], rbx ; pop rbx ; ret
0x0000000000124b6e : mov qword ptr [rip + 0xc67eb], rbx ; pop rbx ; ret
0x000000000014b28a : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000004b2d8 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000004adb3 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000910ab : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], al ; mov eax, r8d ; ret
0x000000000011632e : mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014b226 : mov qword ptr [rsi + 8], rax ; ret
0x0000000000058783 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000090492 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013e4a1 : mov qword ptr [rsi], rdi ; ret
0x000000000013e9de : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000156122 : mov qword ptr fs:[rax], rdx ; ret
0x0000000000156264 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000374af : mov qword ptr fs:[rdx], rax ; ret
0x00000000000bed89 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000142120 : mov r10, rax ; mov byte ptr [r10], 0 ; ret
0x0000000000101e1b : mov r8, qword ptr [rax] ; mov qword ptr [rax], rdi ; mov rax, r8 ; ret
0x00000000000ed754 : mov r8b, 0xe8 ; mov ch, 0x7b ; dec dword ptr [rax - 0x77] ; ret
0x000000000008b1c2 : mov r8d, dword ptr [rax] ; mov eax, r8d ; ret
0x0000000000036d5b : mov r8d, dword ptr [rdx + rax] ; mov eax, r8d ; ret
0x0000000000097dc5 : mov rax, qword ptr [0x10] ; ret
0x0000000000125067 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000125057 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000117d9b : mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0x117dae ; ret
0x0000000000120190 : mov rax, qword ptr [rax + 0x1c8] ; ret
0x000000000012feef : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000152d70 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001536b0 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000120188 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000012016a : mov rax, qword ptr [rax + 8] ; ret
0x00000000000371f8 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000036cc2 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000003584f : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004a54a : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000014417c : mov rax, qword ptr [rax] ; ret
0x000000000008ff54 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001561dd : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1561f9 ; pop rbx ; ret
0x00000000001796c0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015a444 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e1414 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000008ffa8 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008fe78 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000969d4 : mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000000966d5 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000037186 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000035810 : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000969b4 : mov rax, qword ptr [rip + 0x155be5] ; ret
0x00000000000329f4 : mov rax, qword ptr [rip + 0x1bac4d] ; ret
0x0000000000029034 : mov rax, qword ptr [rip + 0x1c7e4d] ; ret
0x0000000000029024 : mov rax, qword ptr [rip + 0x1c7e6d] ; ret
0x0000000000035830 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000037945 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x000000000004b3f4 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000124060 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x38 ; ret
0x00000000001234cf : mov rax, qword ptr [rsp] ; add rsp, 0x20 ; pop rbp ; ret
0x000000000010f333 : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x0000000000123595 : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbp ; ret
0x00000000001259a6 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000125a07 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000097dc4 : mov rax, qword ptr fs:[0x10] ; ret
0x000000000014417b : mov rax, qword ptr fs:[rax] ; ret
0x000000000013f669 : mov rax, r8 ; mov byte ptr [r8 + 2], 0 ; ret
0x000000000011a035 : mov rax, r8 ; mov byte ptr [rsi - 1], 0 ; ret
0x00000000000e67e8 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000ba050 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000ab7a8 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000bed65 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000008ff3b : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000581e5 : mov rdx, qword ptr [rdx + 0x88] ; xor eax, eax ; ret
0x000000000016a8b0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000ba040 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000abbb8 : mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rax], rdx ; ret
0x00000000000bf0d4 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000001621e2 : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000192ae9 : mov word ptr [r9 - 2], cx ; ret
0x00000000000abc1b : mov word ptr [rax + 4], dx ; ret
0x00000000000ba860 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x000000000005632a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000abbd0 : mov word ptr [rax], si ; ret
0x000000000017b752 : mov word ptr [rcx + 4], dx ; ret
0x000000000017b793 : mov word ptr [rcx + 8], dx ; ret
0x00000000000a2880 : mov word ptr [rcx + rax], es ; cmovne rax, rdx ; ret
0x000000000017b720 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017b710 : mov word ptr [rcx], dx ; ret
0x00000000000bb79c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000bc60c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000ba0ec : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000be26c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000116deb : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000bb8a4 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000bc714 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000ba1d4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000be374 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000170da7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000abcf3 : mov word ptr [rdi + 4], ax ; lea rax, [rdi + rdx - 1] ; ret
0x000000000004b368 : mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000000bb668 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000bc4b8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000abb56 : mov word ptr [rdi + 4], dx ; ret
0x00000000000be118 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000bc51a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000bb6ba : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000ba06a : mov word ptr [rdi + 8], dx ; ret
0x00000000000be17a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000018d54c : mov word ptr [rdi + r8 - 2], dx ; vzeroupper ; ret
0x000000000005701f : mov word ptr [rdi + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bf1ce : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000beda8 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016ae4c : mov word ptr [rdi - 2], cx ; ret
0x000000000016ac64 : mov word ptr [rdi - 2], dx ; ret
0x000000000016ae48 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000b9ff3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000bace6 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001931b6 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bf1d3 : mov word ptr [rdi], cx ; ret
0x000000000018ebf8 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000abb00 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000bb623 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000bc463 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b9fe3 : mov word ptr [rdi], dx ; ret
0x000000000018c0f3 : mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000be0c3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000abc90 : mov word ptr [rdi], si ; lea rax, [rdi + rdx - 1] ; ret
0x0000000000192ae6 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000bedad : mov word ptr [rdi], si ; ret
0x000000000010f8e0 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000150065 : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000017dac8 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b6bbd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b6c41 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000017da73 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b6b58 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000125045 : mov word ptr [rdx], ax ; ret
0x0000000000115949 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000004b31a : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001931b9 : mov word ptr [rsi - 2], cx ; ret
0x000000000010f8c7 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000044f18 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000005ae4b : mov word ptr [rsp - 0x10], si ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000beda7 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000018e87b : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x00000000000630b4 : movabs al, byte ptr [0x8304768b41000000] ; ret
0x00000000000630e0 : movabs al, byte ptr [0x8324348b41000000] ; ret
0x000000000007162e : movabs al, byte ptr [0x8948c08548fffffa] ; ret
0x00000000000aa8fa : movabs al, byte ptr [0x8949c9634dfffffc] ; retf
0x00000000000747c2 : movabs al, byte ptr [0xfce9c68941fffffa] ; retf 0xffff
0x0000000000124d91 : movabs dword ptr [0x142048366000ca9], eax ; ret
0x000000000019be01 : movabs dword ptr [0x840fed854d000549], eax ; retf 0
0x000000000015a6d3 : movabs dword ptr [0x8c48348c031fff2], eax ; ret
0x00000000000d2fd7 : movabs dword ptr [0xc14800a3d70a3d70], eax ; retf 0x4804
0x00000000000391e5 : movabs eax, dword ptr [0x148cf8948fffffe] ; retf
0x000000000018d5d0 : movabs eax, dword ptr [0x77f8c5e0075c7f7e] ; ret
0x000000000018d655 : movabs eax, dword ptr [0x77f8c5f007447f7a] ; ret
0x000000000018d5b0 : movabs eax, dword ptr [0x77f8c5f0075c7f7a] ; ret
0x00000000001997df : movabs eax, dword ptr [0x8948f88945fffff5] ; retf
0x00000000000becde : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015d4b8 : movsb byte ptr [rdi], byte ptr [rsi] ; jg 0x15d4ad ; dec dword ptr [rax - 0x77] ; ret
0x0000000000038f88 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000003f5a8 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x0000000000121b98 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 6
0x00000000000a4e04 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000007eb2e : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; idiv bh ; dec dword ptr [rbp + 0x63] ; ret
0x0000000000160e87 : movsd dword ptr [rdi], dword ptr [rsi] ; or byte ptr [rax], al ; test edi, edi ; jns 0x160e97 ; ret
0x0000000000059502 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000055c37 : movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x0000000000026a53 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, 0 ; ret
0x00000000001621e9 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000ab984 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0xab988 ; ret
0x00000000001048fc : movsxd rax, dword ptr [rcx - 0x77] ; retf
0x00000000000d2669 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000bed61 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000017b629 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000186ad0 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001646b9 : movsxd rcx, dword ptr [rip - 0x76b70014] ; ret
0x00000000000373b9 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000037239 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000384c1 : movsxd rdx, dword ptr [rbx + 0x1b] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000013f595 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000186a99 : movsxd rdx, edx ; cmp bh, byte ptr [rcx] ; retf 0x8e0f
0x000000000013f3c9 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000e9db9 : movsxd rsi, dword ptr [rsi - 0x76b7000d] ; ret
0x00000000000d1213 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e837e : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x000000000014de12 : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000094cc0 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000910d6 : movzx eax, byte ptr [rax] ; ret
0x0000000000105c10 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000ad4f8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000187de0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000afa11 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ad513 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000187393 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; vzeroupper ; ret
0x00000000000371a2 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010f8c4 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001913b4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000bed7c : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000ad510 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000187de3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ad6d1 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000186d1b : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000001871cb : movzx edx, byte ptr [rdx + rdi] ; sub eax, edx ; vzeroupper ; ret
0x0000000000180fbf : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000187d68 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000ad567 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000186b9e : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000195024 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000195084 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000195074 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000195064 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000195054 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000195044 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000195034 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001707a0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000191167 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x000000000019500b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000170e80 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000018d520 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000afa14 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000abb72 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000abc2f : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rax + 6], dl ; ret
0x00000000000abbfe : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rax + 4], dl ; ret
0x00000000000abb39 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000abbe0 : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rax + 2], dl ; ret
0x00000000000abb1b : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000170720 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000170e10 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000018c0f0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; vzeroupper ; ret
0x00000000000abb51 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000abc16 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rax + 4], dx ; ret
0x000000000004656b : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000097f0f : nop ; and eax, 0xfffffffd ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000017da5f : nop ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000ef58f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000abc7f : nop ; mov byte ptr [rdi], 0 ; lea rax, [rdi + rdx - 1] ; ret
0x000000000016fc7c : nop ; mov dh, 7 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000016aa7f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000bc44f : nop ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x000000000017b73f : nop ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x00000000000bafdf : nop ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000bafff : nop ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000bafef : nop ; mov dword ptr [rdi], edx ; ret
0x00000000000983c7 : nop ; mov dword ptr [rip + 0x15679e], eax ; ret
0x000000000016ac5f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b9fdf : nop ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000016b01f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000bb63f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x000000000018c10f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; vzeroupper ; ret
0x000000000008b0a6 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000017b77f : nop ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x00000000000bb03f : nop ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000098027 : nop ; mov qword ptr [rip + 0x1532b9], rax ; ret
0x0000000000098010 : nop ; mov qword ptr [rip + 0x1532c8], rax ; ret
0x0000000000097fb7 : nop ; mov qword ptr [rip + 0x1532d9], rax ; ret
0x0000000000097fa7 : nop ; mov qword ptr [rip + 0x1532f1], rax ; ret
0x000000000017b71f : nop ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017b70f : nop ; mov word ptr [rcx], dx ; ret
0x00000000000bafcf : nop ; mov word ptr [rdi], dx ; ret
0x00000000000be09f : nop ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001289eb : nop dword ptr [rax + rax] ; mov eax, r8d ; ret
0x00000000000b9ffb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000011fdb3 : nop dword ptr [rax + rax] ; mov rax, r8 ; ret
0x00000000000bb29b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000017b6fc : nop dword ptr [rax] ; mov byte ptr [rcx], dl ; ret
0x00000000000bafbc : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; ret
0x000000000018d5fc : nop dword ptr [rax] ; mov byte ptr [rdi], dl ; vzeroupper ; ret
0x00000000000bacbc : nop dword ptr [rax] ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000abbe9 : nop dword ptr [rax] ; mov dword ptr [rax], ecx ; ret
0x00000000000661a5 : nop dword ptr [rax] ; mov eax, 0x10 ; ret
0x00000000000e8194 : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x00000000000e82c4 : nop dword ptr [rax] ; mov eax, 0xff ; ret
0x0000000000093ebc : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000001194bc : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000132c24 : nop dword ptr [rax] ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000baced : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000b992c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000bf32d : nop dword ptr [rax] ; mov rax, rdx ; pop rbx ; ret
0x00000000000abbcc : nop dword ptr [rax] ; mov word ptr [rax], si ; ret
0x0000000000186a0d : nop dword ptr [rax] ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014206d : nop dword ptr [rax] ; xor r10d, r10d ; mov eax, r10d ; ret
0x00000000000858cd : nop dword ptr [rax] ; xor r8d, r8d ; mov rax, r8 ; ret
0x00000000001289ea : nop word ptr [rax + rax] ; mov eax, r8d ; ret
0x000000000011fdb2 : nop word ptr [rax + rax] ; mov rax, r8 ; ret
0x000000000004b1b0 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000009b21d : or al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000011c935 : or al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000125949 : or al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000125065 : or al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000ad4f6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000000a20a3 : or al, 0x48 ; mov dword ptr [rdi], esi ; ret
0x000000000013e4a0 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000abb55 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000000b1f64 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001101d6 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000144179 : or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000014b2ae : or bl, al ; mov dword ptr [rsi], 0xc ; ret
0x000000000014b2ad : or bl, r8b ; mov dword ptr [rsi], 0xc ; ret
0x00000000000ef601 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000ef586 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000ef626 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x000000000005e69b : or byte ptr [r8], r8b ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000ef555 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000ef56e : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000045149 : or byte ptr [rax + 0x21], 0xc2 ; mov qword ptr [rdi], rdx ; ret
0x0000000000096afd : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000000443bd : or byte ptr [rax], 0x4c ; add ebx, dword ptr [rdi + 0x20] ; mov rax, r11 ; ret
0x00000000000e9ecd : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d8037 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000005e69c : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000be17d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be1bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be15b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000012feec : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000008e669 : or byte ptr [rbx + 0x5d], bl ; mov eax, r8d ; ret
0x000000000014c2a6 : or byte ptr [rcx + 0x29], al ; rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x0000000000059c70 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000003f5a2 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xffff
0x00000000001101e6 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000ef5ec : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000ef56f : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000ef556 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x0000000000036fe8 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000910d5 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000efd3f : or byte ptr [rdi], cl ; mov dh, 0xc ; or byte ptr [rax + 0x63], cl ; ret
0x0000000000150da5 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015ab2e : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000112cf4 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000027a1b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014bb92 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000014d059 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x0000000000055438 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000a20a1 : or byte ptr [rdx + 0xc], dh ; mov qword ptr [rdi], rsi ; ret
0x00000000000ef602 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000b9831 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000ef627 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000ef587 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000027a32 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000123e57 : or dword ptr [rax], eax ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000156120 : or dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000000917e0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000005e82c : or dword ptr [rdi - 0x2f], esi ; mov rax, r8 ; ret
0x00000000000a24d7 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x00000000001168b1 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000097f05 : or eax, 2 ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000013ed5c : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x0000000000116852 : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x0000000000085d84 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000917e1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000085d85 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016aaca : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000120169 : out dx, al ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f1ff5 : out dx, eax ; mov cs, word ptr [rdi] ; add byte ptr [rax + 0x63], cl ; retf 0x25eb
0x0000000000105bc0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000016a8fa : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a9f6 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016a942 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000ab790 : out dx, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000108f8e : outsb dx, byte ptr [rsi] ; mov ebx, 0x99e8000a ; ret
0x0000000000144178 : outsb dx, byte ptr [rsi] ; or al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000125000 : outsd dx, dword ptr [rsi] ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000016b082 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000016b282 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x0000000000154b46 : outsd dx, dword ptr [rsi] ; sub rsp, -0x80 ; mov eax, r8d ; pop rbp ; ret
0x00000000000371c8 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000037156 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000014c204 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000137bd9 : pop rbp ; mov byte ptr [rdx], 0 ; pop r12 ; pop r13 ; ret
0x000000000004a54d : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000013f5bb : pop rbx ; mov qword ptr [r9], rcx ; ret
0x00000000000a4e03 : pop rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000016ae99 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016aca9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016aac9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a8f9 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016a9f5 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016a941 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000026a4d : rcl byte ptr [rcx], 0x48 ; mov dword ptr [rip + 0x1ca5b2], eax ; ret
0x000000000009d682 : rcr byte ptr [rbp + 0x41], 0x5c ; mov rax, r8 ; pop r13 ; ret
0x000000000009ce12 : rcr byte ptr [rbx + 0x5d], 0x4c ; mov eax, eax ; pop r12 ; ret
0x000000000014ccea : rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x000000000014c2a9 : rcr byte ptr [rbx + 0x5d], 1 ; mov eax, r8d ; ret
0x00000000000bf332 : rcr byte ptr [rbx - 0x3d], 1 ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000becdd : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000beccf : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001621e8 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000bf0d7 : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000006608d : rol byte ptr [rbx + 0xd74fff8], 0x44 ; mov eax, eax ; ret
0x000000000013f3ca : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000a29ba : rol byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x0000000000125043 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x000000000005fbc7 : rol dword ptr [rcx + rdi - 0x18], 0x7e ; mov cl, 0xeb ; retf 0x4c90
0x000000000013f5b6 : rol dword ptr [rdx], 0x45 ; mov dword ptr [rax], ebx ; pop rbx ; mov qword ptr [r9], rcx ; ret
0x000000000013f596 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000afa36 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000a5db8 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdi ; ret
0x00000000001500aa : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000055434 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000beb54 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000014d57d : ror byte ptr [rcx + rcx*4 + 7], 1 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000859b1 : ror byte ptr [rdi], 0x84 ; mov dword ptr [rax], 0x89480000 ; ret
0x00000000000eb7a8 : ror byte ptr [rdi], cl ; mov byte ptr [rcx], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ee166 : ror byte ptr [rdi], cl ; mov dh, 4 ; adc byte ptr [rcx], bh ; retf
0x00000000000ed4ef : ror byte ptr [rdi], cl ; mov dl, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000af88d : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000198297 : ror dword ptr [rcx + 0xf], cl ; mov edx, 0x94d3ff3 ; ret
0x0000000000191433 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013f3bc : sal byte ptr [rbp + 0x19], 0x44 ; mov eax, eax ; ret
0x000000000018b9e2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000000bf0c6 : sal byte ptr [rbp + 4], cl ; mov rax, rdi ; ret
0x0000000000036cfe : sal byte ptr [rbp + 7], 0x44 ; mov eax, eax ; ret
0x00000000000ab922 : sal byte ptr [rbp - 0x15], 1 ; mov rax, r8 ; ret
0x0000000000142066 : sal byte ptr [rbp - 0x1c], 0x44 ; mov eax, edx ; ret
0x000000000013e9db : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000131e5d : sal byte ptr [rbp - 0x57], 0x48 ; mov eax, edi ; ret
0x0000000000096b00 : sal byte ptr [rbx + 0x25], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000015a5d8 : sal byte ptr [rbx + 0xd], 1 ; xor r8d, r8d ; mov eax, r8d ; ret
0x0000000000156261 : sal byte ptr [rcx + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000ab7aa : sal dword ptr [rcx], 0xc0 ; mov qword ptr [rdx], rcx ; ret
0x00000000000bed67 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013f9bf : sar byte ptr [rax + 0xe], cl ; mov rax, rdx ; movsxd rdx, ecx ; ret
0x0000000000046f5c : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x0000000000097ed7 : sar eax, 1 ; and eax, 1 ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000008db96 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000004a701 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047277 : sbb al, byte ptr [rax] ; mov eax, edx ; ret
0x00000000000be354 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be376 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3b4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000008feac : sbb byte ptr [rax], al ; setne r8b ; mov eax, r8d ; ret
0x00000000000be355 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be377 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be3b5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000004a844 : sbb byte ptr [rbp + 0x4c], bl ; mov eax, esp ; pop r12 ; ret
0x000000000013f5ba : sbb byte ptr [rbx + 0x49], bl ; mov dword ptr [rcx], ecx ; ret
0x0000000000065fac : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000055b7d : sbb dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000abd53 : sbb dword ptr [rax], edi ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000000d31aa : sbb dword ptr [rdi + 0x23], edi ; mov rax, r12 ; pop r12 ; ret
0x0000000000036c74 : sbb eax, dword ptr [r8] ; mov qword ptr [rax], rdx ; ret
0x00000000000357b1 : sbb eax, dword ptr [rax] ; mov byte ptr [rip + 0x1b8024], dl ; ret
0x0000000000036c75 : sbb eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x000000000005e521 : scasb al, byte ptr [rdi] ; mov rax, r10 ; pop rbx ; ret
0x0000000000045dda : sete dh ; xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x0000000000163aa5 : sete dl ; mov dword ptr [rbx], edx ; pop rbx ; ret
0x000000000005954c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000594cb : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000005949a : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005954b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000594ca : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000059499 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000004b365 : shr eax, 0x20 ; mov word ptr [rdi + 4], ax ; xor eax, eax ; ret
0x00000000001621e5 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000005965c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000595e5 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000595b4 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000005965b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000595e4 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000595b3 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000a4e44 : stc ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000016b628 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000097f12 : std ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x000000000018c127 : std ; mov dword ptr [rdi + rdx - 3], ecx ; vzeroupper ; ret
0x000000000016ae4b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000000becdc : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000016b228 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bf0d8 : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000000a37c9 : stosd dword ptr [rdi], eax ; or al, 0 ; cmovne rax, rdx ; ret
0x00000000000443da : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, r11 ; ret
0x00000000001627a8 : sub byte ptr [rbx - 0x1b], dh ; mov eax, 1 ; ret
0x00000000001627a7 : sub byte ptr [rbx - 0x1b], sil ; mov eax, 1 ; ret
0x000000000014c224 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000000ed59f : sub byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ed59d : sub dword ptr [rax + rbp + 0xf], esi ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003320c : sub eax, 1 ; mov dword ptr [rdx + 8], eax ; pop rbx ; ret
0x00000000000776b1 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000005af63 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000005ad95 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008e87c : sub eax, edx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000096718 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000096709 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013f201 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000008e87b : sub rax, rdx ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001500c3 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001564fb : test al, 0 ; add byte ptr [rax], al ; mov rax, r8 ; pop rbx ; ret
0x000000000005e64c : test al, 3 ; add byte ptr [rax], al ; mov rsp, rdx ; ret
0x00000000000b9fca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000017b72a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000017b76a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000bb02a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000bc43a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000000bafe9 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov dword ptr [rdi], edx ; ret
0x00000000001639d7 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x0000000000046daa : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000015611f : test eax, 0x48640009 ; mov dword ptr [rax], edx ; ret
0x0000000000119f15 : test eax, eax ; je 0x119f23 ; mov qword ptr [rax], rdx ; ret
0x0000000000156260 : test eax, eax ; je 0x1561ee ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000046da9 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x0000000000119f14 : test rax, rax ; je 0x119f24 ; mov qword ptr [rax], rdx ; ret
0x00000000000be28d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be30f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be411 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bfcbe : xchg dword ptr [rbp + 0x4cd575c9], eax ; mov eax, eax ; ret
0x00000000001101d5 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000055c33 : xchg dword ptr [rcx], ebx ; add al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; retf
0x00000000000aba97 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xc3da75f9 ; nop ; ret
0x000000000011a528 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000009d24b : xchg eax, ecx ; fcom qword ptr [rax + rax] ; mov qword ptr [rax], rdi ; ret
0x0000000000184781 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000581e7 : xchg eax, edx ; mov byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014cce9 : xchg eax, esp ; rcr byte ptr [rbx + 0x5d], 0xf ; mov dh, 0xc0 ; pop r12 ; ret
0x0000000000055433 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000beccc : xlatb ; jb 0xbecd7 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013f599 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000b9918 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b98ae : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000005acd4 : xor al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000be4a7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000006981b : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000be238 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000be24e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000be270 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000be28e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000be2ae : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000be2d4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000be2f0 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000be310 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000be330 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000be356 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000be378 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000be396 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000be3b6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000be3d2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000be3f2 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000be412 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000be432 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000be458 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000be4a8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000be17e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000be19c : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000be1bc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000be1de : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000be1fe : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000be21e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000be0b4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000be0c6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000be0dc : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000be0f4 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000be10a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000be11c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000be13a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000be146 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000be15c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000be0a0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000b9790 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000ab78b : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x11] ; mov qword ptr [rdx], rcx ; ret
0x000000000011632b : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000193447 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000f5546 : xor eax, eax ; mov dword ptr [rbp + 0x30], edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045ddd : xor eax, eax ; mov dword ptr [rbx + 0x40], esi ; pop rbx ; ret
0x000000000010f669 : xor eax, eax ; mov dword ptr [rbx + 4], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008a7af : xor eax, eax ; mov dword ptr [rbx], ecx ; pop rbx ; ret
0x0000000000116854 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000004b28d : xor eax, eax ; mov dword ptr [rsi + 0xc], 0x1000b ; ret
0x00000000000a20ba : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000000ab7ab : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000163d3d : xor eax, eax ; mov qword ptr [rip + 0x8ae2a], rsi ; ret
0x000000000014d57c : xor eax, edx ; mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a23c9 : xor eax, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000bf9f9 : xor ebp, dword ptr [rcx] ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000011632a : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
