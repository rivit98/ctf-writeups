import sys

bytecode_orig = [
    0x81, 0x75, 0x00, 0x80, 0x00, 0x80, 0x0A, 0x80, 0x3F, 0x80,
    0x65, 0x80, 0x76, 0x80, 0x69, 0x80, 0x6C, 0x80, 0x61, 0x80,
    0x20, 0x80, 0x74, 0x80, 0x75, 0x80, 0x6F, 0x80, 0x20, 0x80,
    0x74, 0x80, 0x69, 0x80, 0x20, 0x80, 0x65, 0x80, 0x6B, 0x80,
    0x61, 0x80, 0x6D, 0x80, 0x20, 0x80, 0x75, 0x80, 0x6F, 0x80,
    0x79, 0x80, 0x20, 0x80, 0x6E, 0x80, 0x61, 0x80, 0x43, 0x80,
    0x0A, 0x80, 0x58, 0x80, 0x20, 0x80, 0x49, 0x80, 0x20, 0x80,
    0x52, 0x80, 0x20, 0x80, 0x54, 0x80, 0x20, 0x80, 0x41, 0x80,
    0x20, 0x80, 0x4D, 0x80, 0x20, 0x80, 0x65, 0x80, 0x68, 0x80,
    0x74, 0x80, 0x20, 0x80, 0x6F, 0x80, 0x74, 0x80, 0x20, 0x80,
    0x65, 0x80, 0x6D, 0x80, 0x6F, 0x80, 0x63, 0x80, 0x6C, 0x80,
    0x65, 0x80, 0x57, 0x81, 0x3B, 0x01, 0x30, 0x80, 0x01, 0x80,
    0x01, 0x80, 0x00, 0xC0, 0x10, 0x80, 0x75, 0x13, 0x81, 0xA0,
    0x00, 0x31, 0x10, 0x80, 0x64, 0x13, 0x81, 0xAA, 0x00, 0x31,
    0x10, 0x80, 0x6C, 0x13, 0x81, 0xB4, 0x00, 0x31, 0x10, 0x80,
    0x72, 0x13, 0x81, 0xC0, 0x00, 0x31, 0x81, 0xFB, 0x00, 0x30,
    0x11, 0x20, 0x80, 0x01, 0x13, 0x21, 0x81, 0xCC, 0x00, 0x30,
    0x11, 0x20, 0x80, 0x01, 0x12, 0x21, 0x81, 0xCC, 0x00, 0x30,
    0x11, 0x20, 0x20, 0x80, 0x01, 0x13, 0x21, 0x21, 0x81, 0xCC,
    0x00, 0x30, 0x11, 0x20, 0x20, 0x80, 0x01, 0x12, 0x21, 0x21,
    0x81, 0xCC, 0x00, 0x30, 0x20, 0x20, 0x81, 0xDA, 0x00, 0x21,
    0x10, 0x20, 0x80, 0x10, 0x81, 0x47, 0x01, 0x30, 0x14, 0x10,
    0x20, 0x12, 0x21, 0x14, 0x21, 0x14, 0x21, 0x14, 0x20, 0x81,
    0xEF, 0x00, 0x21, 0x80, 0x02, 0x81, 0x61, 0x01, 0x30, 0x81,
    0x7B, 0x00, 0x14, 0x81, 0x74, 0x01, 0x12, 0x30, 0x80, 0x00,
    0x01, 0x81, 0x38, 0x01, 0x80, 0x00, 0x80, 0x0A, 0x80, 0x2E,
    0x80, 0x65, 0x80, 0x75, 0x80, 0x72, 0x80, 0x67, 0x80, 0x20,
    0x80, 0x61, 0x80, 0x20, 0x80, 0x79, 0x80, 0x62, 0x80, 0x20,
    0x80, 0x6E, 0x80, 0x65, 0x80, 0x74, 0x80, 0x61, 0x80, 0x65,
    0x80, 0x20, 0x80, 0x65, 0x80, 0x72, 0x80, 0x65, 0x80, 0x77,
    0x80, 0x20, 0x80, 0x75, 0x80, 0x6F, 0x80, 0x59, 0x81, 0x3B,
    0x01, 0x30, 0x80, 0x01, 0x01, 0x10, 0x81, 0x45, 0x01, 0x31,
    0xC1, 0x81, 0x3B, 0x01, 0x30, 0x11, 0x30, 0x80, 0x00, 0x20,
    0x20, 0x10, 0x81, 0x5B, 0x01, 0x31, 0x80, 0x01, 0x13, 0x21,
    0x10, 0x21, 0x12, 0x81, 0x49, 0x01, 0x30, 0x11, 0x21, 0x11,
    0x21, 0x14, 0x30, 0x10, 0x81, 0x71, 0x01, 0x31, 0x80, 0x01,
    0x13, 0x20, 0x10, 0x12, 0x21, 0x81, 0x61, 0x01, 0x30, 0x11,
    0x14, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x81, 0x7F, 0x05, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0x7F, 0x05, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0x74, 0x05, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0x74, 0x05, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0x7F, 0x05, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x81, 0x74, 0x05, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x30, 0x00,
    0x00, 0x00, 0x81, 0xFB, 0x00, 0x30, 0x81, 0x74, 0x05, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0x74,
    0x05, 0x30, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB, 0x00, 0x30,
    0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB,
    0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30,
    0x81, 0xFB, 0x00, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x81, 0x85,
    0x05, 0x30, 0x81, 0xFB, 0x00, 0x30, 0x20, 0x10, 0x81, 0xFB,
    0x00, 0x31, 0x80, 0x01, 0x13, 0x21, 0x30, 0x20, 0x80, 0x01,
    0x12, 0x21, 0x30, 0x11, 0x11, 0x11, 0x11, 0x81, 0xCE, 0x05,
    0x80, 0x00, 0x80, 0x0A, 0x80, 0x21, 0x80, 0x74, 0x80, 0x69,
    0x80, 0x20, 0x80, 0x65, 0x80, 0x64, 0x80, 0x61, 0x80, 0x6D,
    0x80, 0x20, 0x80, 0x75, 0x80, 0x6F, 0x80, 0x79, 0x80, 0x20,
    0x80, 0x2C, 0x80, 0x73, 0x80, 0x6E, 0x80, 0x6F, 0x80, 0x69,
    0x80, 0x74, 0x80, 0x61, 0x80, 0x6C, 0x80, 0x75, 0x80, 0x74,
    0x80, 0x61, 0x80, 0x72, 0x80, 0x67, 0x80, 0x6E, 0x80, 0x6F,
    0x80, 0x43, 0x81, 0x3B, 0x01, 0x30, 0x81, 0xF8, 0x00, 0x30
]

# TODO: input as z3 array ? ?

class VM:
    def __init__(self):
        self.pc = 0
        self.bytecode = bytecode_orig


    def print(self, m):
        print(f'{hex(self.pc)}: {m}')

    def disassemble(self):
        self.pc = 0
        while self.pc < len(self.bytecode):
            self.pc += self.step()


    def step(self):
        bytecode = self.bytecode
        match bytecode[self.pc]:
            case 0:
                self.print("NOP")
            case 1:
                self.print(f"POP RET")
            case 0x10:
                self.print("DUP1")
            case 0x11:
                self.print("POP")
            case 0x12:
                self.print(f"ADD")
            case 0x13:
                self.print(f"SUB")
            case 0x14:
                self.print(f"SWAP")
            case 0x20:
                self.print(f"WRITE_MEM")
            case 0x21:
                self.print(f"READ_MEM")
            case 0x30:
                self.print(f"RET\n")
            case 0x31:
                self.print(f"JZ")
            case 0x32:
                self.print(f"JNZ")
            case 0x33:
                self.print(f"JL")
            case 0x34:
                self.print(f"JLE")
            case 0xc0:
                self.print(f"GETC")
            case 0xc1:
                self.print(f"PUTC")
            case 0x80:
                v12 = bytecode[self.pc + 1]
                self.print(f"PUSH2 {hex(v12)} ({chr(v12).encode()})")
                return 2
            case 0x81:
                v12 = (bytecode[self.pc + 1]) | bytecode[self.pc + 1 + 1] << 8
                self.print(f"PUSH3 {hex(v12)} ({v12})")
                return 3
            case _:
                raise SystemExit("BAD INSTR")

        return 1


if __name__ == '__main__':
    vm = VM()
    vm.disassemble()



