from pwn import *

raw = [
    0x2a, 0xe8, 0x32, 0x6b, 0x3c, 0x57, 0x2b, 0x66, 0x27,
    0xfc, 0x0c, 0x64, 0x20, 0x50, 0x24, 0x63, 0x17, 0xe3,
    0x3c, 0x6f, 0x17, 0x48, 0x3f, 0x6d, 0x17, 0xe9, 0x3f,
    0x41, 0x32, 0x54, 0x0f, 0x41, 0x17, 0xff, 0x21, 0x49,
    0x21, 0x5d, 0x0f, 0x11, 0xde, 0x64, 0x34, 0x33, 0x78,
    0xf1, 0xbe
]

def to_hex(s, raw):
    a = asm(s, arch='amd64')
    print(' '.join(map(lambda v: hex(v)[2:].rjust(2, '0'), a)))
    print(disasm(a, arch='amd64'))
    print('-' * 16)
    return xor(list(a), raw).decode()

# mov rdx, qword ptr[rbx+8]
# xor qword ptr[rax+8], rdx

# mov rdx, qword ptr[rbx+0x10]
# xor qword ptr[rax+0x10], rdx

flag_parts = []
for i in range(5):
    si, sn = 8*i, 8*(i+1)
    f = to_hex(f'mov rdx, qword ptr[rbx+{sn}]; xor qword ptr[rax+{sn}], rdx', raw[si:sn])
    flag_parts.append(f)

flag_parts.append(to_hex('mov eax, 0; leave; ret', raw[sn:]))

print(''.join(flag_parts))
